<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzsoft.xsr.core.mapper.FjCellFormulaMapper">

	<resultMap id="cellDataResultMap" type="com.xzsoft.xsr.core.modal.CellData">
		<result column="MSFORMAT_ID" property="sheet" />
		<result column="X" property="row" />
		<result column="Y" property="col" />
		<result column="DATAFORMULA" property="json" />
		<result column="APPLYWAY" property="applyWay" />
	</resultMap>
	
	<insert id="insertBatchCellFormat">
		insert into
		xsr_rep_cal_formula(FORMULA_ID,SUIT_ID,ROWITEM_ID,COLITEM_ID,ENTITY_ID,DATAFORMULA,FORMULA_DESC,F_CALTYPE,LAST_UPDATE_DATE,LAST_UPDATED_BY,CREATION_DATE,CREATED_BY)
		values
		<foreach collection="formatCells" item="formatCell" index="index"
			separator=",">
			(#{formatCell.FORMULA_ID},
			#{formatCell.SUIT_ID},
			#{formatCell.ROWITEM_ID},
			#{formatCell.COLITEM_ID},
			#{formatCell.ENTITY_ID},
			#{formatCell.DATAFORMULA},
			#{formatCell.FORMULA_DESC},
			#{formatCell.F_CALTYPE},
			#{formatCell.LAST_UPDATE_DATE},
			#{formatCell.LAST_UPDATED_BY},
			#{formatCell.CREATION_DATE},
			#{formatCell.CREATED_BY})
		</foreach>
	</insert>

	<delete id="deleteByRC" parameterType="String">
		delete from
		xsr_rep_cal_formula where ROWITEM_ID = #{0} and COLITEM_ID=#{1} and
		ENTITY_ID=#{2} and SUIT_ID=#{3}
	</delete>
	<!-- 通过行列指标确定公式是否存在 -->
	<select id="isExistByRC" parameterType="String" resultType="int">
		select count(1) from xsr_rep_cal_formula where ROWITEM_ID = #{0} and
		COLITEM_ID=#{1} and ENTITY_ID=#{2} and SUIT_ID=#{3}
	</select>
	<!-- 通过行列指标查公式ID -->
	<select id="selectIdByRC" parameterType="String" resultType="String">
		select FORMULA_ID from xsr_rep_cal_formula where ROWITEM_ID = #{0} and
		COLITEM_ID=#{1} and ENTITY_ID=#{2} and SUIT_ID=#{3}
	</select>
	<!-- 通过公式ID更新公式 -->
	<update id="updateByID" parameterType="com.xzsoft.xsr.core.modal.CellFormula">
		UPDATE xsr_rep_cal_formula
		SET DATAFORMULA = #{DATAFORMULA},
		FORMULA_DESC = #{FORMULA_DESC},
		F_CALTYPE = #{F_CALTYPE},
		LAST_UPDATE_DATE = #{LAST_UPDATE_DATE},
		LAST_UPDATED_BY = #{LAST_UPDATED_BY}
		WHERE
		FORMULA_ID = #{FORMULA_ID}
	</update>
	<!-- 根据MSFORMAT_ID加载数据单元格 -->
	<select id="loadValue" parameterType="String" resultMap="cellDataResultMap">
		select f.MSFORMAT_ID,f.X,f.Y,concat("{data:'",t.DATAFORMULA,"'}") DATAFORMULA  ,'apply' APPLYWAY
		from
		xsr_rep_cal_formula
		t,xsr_rep_modalsheet_format f
		where
		f.MSFORMAT_ID=#{0}
		and t.ENTITY_ID=#{1}
		and t.SUIT_ID=#{2}
		and f.CELL_COMMENT_TYPE='DATA'
		and	f.CELL_COMMENT=concat(t.ROWITEM_ID,',',t.COLITEM_ID)
	</select>
	
	<select id="getDictPeriod" resultType="com.xzsoft.xsr.core.modal.DataDTO">
		select t.ITEM_CODE code,t.ITEM_NAME name from xsr_rep_dict t where t.DICT_NAME = 'PERIOD_DIM'
	</select>
	
	<select id="getPeriodByCode" resultType="com.xzsoft.xsr.core.modal.DataDTO">
		SELECT t.ITEM_CODE code, t.ITEM_NAME name
		FROM xsr_rep_dict t
		WHERE T.DICT_NAME = 'PERIOD_DIM' and t.ITEM_CODE=#{1}
		UNION
		SELECT p.PERIOD_CODE code, p.PERIOD_NAME name
		FROM xsr_rep_period p
		WHERE SUIT_ID =#{0} 
		and p.PERIOD_CODE=#{1}
	</select>
	
	<select id="getEntityByCode" resultType="com.xzsoft.xsr.core.modal.DataDTO">
		SELECT t.ORG_CODE CODE, t.ORG_NAME NAME
		FROM xsr_rep_org_property s, xip_pub_orgs o
		WHERE s.org_id = o.org_id
		AND s.suit_id = #{0}
		and o.ORG_CODE=#{1}
	</select>
	
	<select id="getRowByCode" resultType="com.xzsoft.xsr.core.modal.DataDTO">
		select t.ROWITEM_CODE code,CONCAT('[',a.ROWITEM_NAME,']-[',t.ROWITEM_NAME,']') name
		from xsr_rep_rowitem t, xsr_rep_rowitem a
		where t.UPCODE = a.ROWITEM_CODE 
		and t.suit_id = #{0}
		and a.suit_id = #{0}
		and t.ROWITEM_CODE =#{1}
	</select>
	
	<select id="getColByCode" resultType="com.xzsoft.xsr.core.modal.DataDTO">
		SELECT t.COLITEM_CODE CODE,CONCAT('[',a.COLITEM_NAME,']-[',t.COLITEM_NAME,']') NAME
		FROM xsr_rep_colitem t, xsr_rep_colitem a 
		WHERE t.UPCODE = a.COLITEM_CODE
		and t.suit_id = #{0}
		and a.suit_id = #{0}
		and t.COLITEM_CODE =#{1}
	</select>
	
	<!-- SELECT	t.ROWITEM_NAME 
		FROM xsr_rep_rowitem t
		WHERE  -->
	<select id="getRowNameById" resultType="String">
		select CONCAT('[',a.ROWITEM_NAME,']-[',t.ROWITEM_NAME,']') name
		from xsr_rep_rowitem t, xsr_rep_rowitem a
		where t.UPCODE = a.ROWITEM_CODE 
		and t.suit_id = #{0}
		and a.suit_id = #{0}
		and t.ROWITEM_ID =#{1}
	</select>
	
	<select id="getColNameById" resultType="String">
		SELECT  CONCAT('[',a.COLITEM_NAME,']-[',t.COLITEM_NAME,']') NAME
		FROM xsr_rep_colitem t, xsr_rep_colitem a 
		where t.UPCODE = a.COLITEM_CODE 
		and t.suit_id = #{0}
		and a.suit_id = #{0}
		and t.COLITEM_ID =#{1}
	</select>
	
	<select id="getCnyByCode" resultType="com.xzsoft.xsr.core.modal.DataDTO">
		select t.CURRENCY_CODE code,t.CURRENCY_NAME name from xsr_rep_currency t 
		where t.SUIT_ID= #{0}
		and t.CURRENCY_CODE= #{1}
	</select>
	
	<select id="getRepValue" parameterType="java.util.HashMap" resultType="String">
		select t.CELLV repValue from xsr_rep_cellvalue t where t.SUIT_ID=#{suitId}
		and t.ENTITY_ID=#{entityId}
		and t.PERIOD_ID=#{periodId}
		and t.ROWITEM_CODE=#{rowCode}
		and t.COLITEM_CODE=#{colCode}
		and t.CURRENCY_CODE=#{cnyCode}
	</select>
	<select id="getFUN_DB_SUB" resultType="String">
		select t.FUN_DB_SUB from xsr_rep_fun t where t.FUN_CODE= #{0}
	</select>
	
	<!-- 调用存储过程，funName为调用的存储过程或函数名,paramArr为输入参数 -->
    <select id="testByProc" statementType="CALLABLE" parameterType="java.util.HashMap" resultType="String">
       <![CDATA[
           {call  DB_Test(
              #{funName,mode=IN,jdbcType=VARCHAR},
              #{params,mode=IN,jdbcType=VARCHAR},
              #{o_result,mode=OUT,jdbcType=VARCHAR}
           )}    
       ]]>
    </select>
    <!-- 通过模板ID查询出该模板的公共级公式, 如果isOnlyImpRepFormula=‘true’,只导出REP类型公式 -->
    <select id="getCalFormulaList" parameterType="java.util.HashMap" resultType="com.xzsoft.xsr.core.modal.CellFormula">
	    select t.SUIT_ID, t.ROWITEM_ID, rf.ROWITEM_CODE, t.COLITEM_ID, cf.COLITEM_CODE, t.DATAFORMULA, t.FORMULA_DESC, t.F_CALTYPE, t.ORDERBY_FLAG
		  from xsr_rep_cal_formula t,
		       xsr_rep_rowmodalref rf,
		       xsr_rep_colmodalref cf
		 where t.ROWITEM_ID = rf.ROWITEM_ID
		   and t.COLITEM_ID = cf.COLITEM_ID
		   and rf.MODALSHEET_ID = cf.MODALSHEET_ID
		   and rf.LANNO = cf.LANNO
		   and rf.MODALSHEET_ID = #{modalsheetId}
		   and t.ENTITY_ID = '-1'
		   and t.SUIT_ID = #{suitId}
		<!-- <if test="#{isOnlyImpRepFormula} == 'true'"> 这样写不正确-->
	   	<if test="isOnlyImpRepFormula == 'true'">
	   		and t.F_CALTYPE = 'REP'
	   	</if>
    </select>
    <!-- 通过模板ID查询出该模板的固定公式：单位级公式优先 -->
    <!-- by songyh 2016-01-27, 报表采集，数据运算调用-->
    <select id="getRepFormulaList" parameterType="java.util.HashMap" resultType="com.xzsoft.xsr.core.modal.CellFormula">
	    select * from (
			 select t.entity_id, t.SUIT_ID, t.ROWITEM_ID, rf.ROWITEM_CODE, t.COLITEM_ID, cf.COLITEM_CODE, t.DATAFORMULA, t.FORMULA_DESC, t.F_CALTYPE, t.ORDERBY_FLAG
					  from xsr_rep_cal_formula t,
					       xsr_rep_rowmodalref rf,
					       xsr_rep_colmodalref cf
					 where t.ROWITEM_ID = rf.ROWITEM_ID
					   and t.COLITEM_ID = cf.COLITEM_ID
					   and rf.MODALSHEET_ID = cf.MODALSHEET_ID
					   and rf.LANNO = cf.LANNO
					   #and rf.MODALSHEET_ID = #{modalsheetId}
					   and t.ENTITY_ID = '-1'
					   and t.SUIT_ID = #{suitId}
					   <if test="fType == 'REP'">
					   		and t.F_CALTYPE = 'REP'
					   </if>
					   and not exists(select 1 from xsr_rep_cal_formula t1 where t1.suit_id=t.SUIT_ID
			                 and t1.rowitem_id=t.ROWITEM_ID and t1.colitem_id=t.COLITEM_ID  
											 and t1.entity_id=#{entityId})
			   union 
			   select t.entity_id, t.SUIT_ID, t.ROWITEM_ID, rf.ROWITEM_CODE, t.COLITEM_ID, cf.COLITEM_CODE, t.DATAFORMULA, t.FORMULA_DESC, t.F_CALTYPE, t.ORDERBY_FLAG
					  from xsr_rep_cal_formula t,
					       xsr_rep_rowmodalref rf,
					       xsr_rep_colmodalref cf
					 where t.ROWITEM_ID = rf.ROWITEM_ID
					   and t.COLITEM_ID = cf.COLITEM_ID
					   and rf.MODALSHEET_ID = cf.MODALSHEET_ID
					   and rf.LANNO = cf.LANNO
					   #and rf.MODALSHEET_ID = #{modalsheetId}
					   and t.ENTITY_ID = #{entityId}
					   and t.SUIT_ID = #{suitId}
					   <if test="fType == 'REP'">
					   		and t.F_CALTYPE = 'REP'
					   </if>
					   ) r order by orderby_flag,rowitem_code,colitem_code
			  
    </select>
    <!-- 通过模板id，删除该模板上的公共级采集公式 -->
    <delete id="deleteCalFormula" parameterType="java.util.HashMap">
	    delete t from xsr_rep_cal_formula t 
		 where EXISTS (select 1 
		                 from xsr_rep_rowmodalref rf 
		                where rf.MODALSHEET_ID = #{modalsheetId}
		                  and t.ROWITEM_ID = rf.ROWITEM_ID)
		   and EXISTS (select 1 
		                 from xsr_rep_colmodalref cf
		                where cf.MODALSHEET_ID = #{modalsheetId}
		                  and t.COLITEM_ID = cf.COLITEM_ID)
		   and t.ENTITY_ID = '-1'
		   and t.SUIT_ID = #{suitId}
		<if test="isOnlyImpRepFormula == 'true'">
	   		and t.F_CALTYPE = 'REP'
	   	</if>
    </delete>
</mapper>