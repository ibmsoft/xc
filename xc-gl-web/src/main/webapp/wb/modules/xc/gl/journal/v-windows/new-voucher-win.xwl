{"inframe":false,"title":"增加凭证处理","hidden":false,"roles":{"default":1},"children":[{"configs":{"loginRequired":"false","serverScript":"//---------------------获取当前模块语言对应的.json文件，放到request中----------------\ncom.xzsoft.xip.platform.util.XipUtil.getCurrentLang(request,\"xc/gl/journal/v-windows/json/new-voucher-win\");\n\n// TODO: 系统根目录\nvar ctxPath = request.getContextPath();\nrequest.setAttribute(\"ctxPath\",ctxPath) ;\n\n// 控制台日志输出对象,调试使用\nvar out = java.lang.System.out ;\n\n// TODO: 进入方式\nvar method = request.getParameter('method') ;\nrequest.setAttribute(\"method\",method);\n\n// TODO: 获取当前数据库类型和系统根目录，并存入request对象\nvar dbType = com.xzsoft.xip.platform.util.PlatformUtil.getDbType();\nrequest.setAttribute(\"dbType\",dbType);\n\n// TODO: 获取凭证类型：1-金额凭证，2-数量凭证，3-外币凭证\nvar vtype = request.getParameter(\"vt\") ;\nrequest.setAttribute(\"vtype\",vtype);\n\n// TODO: 根据凭证类型生成凭证模板分类，并存入request对象\nif(vtype == 'normal'){\n  request.setAttribute(\"templateType\",\"1\");\n}else if(vtype == 'amount'){\n  request.setAttribute(\"templateType\",\"2\");\n}else if(vtype == 'foreign'){\n  request.setAttribute(\"templateType\",\"3\");\n}else{\n  request.setAttribute(\"templateType\",\"1\");\n}\n\n// TODO:获取凭证来源信息：manual-内部手工凭证，其他值则视为外部凭证\nvar _srctype = request.getParameter(\"srctype\") ;\nrequest.setAttribute(\"srctype\",_srctype);\n\n// TODO: 根据凭证操作类型执行数据初始化处理\nvar vheadId = request.getParameter(\"headId\") ;\t// 凭证头ID\nrequest.setAttribute(\"headId\", vheadId) ;\n\n// TODO: 获取当前凭证操作类型（add-新增，copy-复制，write_off-冲销，modify-修改），并存入request对象\nvar optype = request.getParameter(\"optype\") ;\nrequest.setAttribute(\"optype\",optype) ;\nif(optype == 'write_off'){\n  // 判断是否已冲销\n  var sql= 'select 1 from xc_gl_v_heads t where t.v_head_id = \\'' +vheadId+ '\\'and t.is_write_off = \\'Y\\'' ;\n  app.run(sql, {\n    errorText: '凭证已冲销'\n  });\n}\n\n// TODO: 账簿ID\nvar ledgerId = request.getParameter(\"ledgerId\") ;\n\n// TODO: 初始化会计期\nif(optype == 'copy' || optype == 'write_off' || optype == 'add'){\n  if(ledgerId !== \"\" && ledgerId !== null && ledgerId !== undefined){\n    var accDate = com.xzsoft.xc.gl.util.XCGLWebBuilderUtil.initialAccountDate(ledgerId) ;\n    request.setAttribute(\"accDate\", accDate) ;\n  }\n}\n\n// 当前用户ID和名称\nvar createdBy = com.xzsoft.xip.platform.session.CurrentSessionVar.getUserId() ;\nvar createdName = com.xzsoft.xip.platform.session.CurrentSessionVar.getEmpName() ;\n// TODO: 初始化凭证头信息\nvar formJson = {} ; \nif(optype == 'copy' || optype == 'write_off' || optype == 'modify'){\n  // 查询凭证头信息\n  var headJson = com.xzsoft.xc.gl.util.XCGLWebBuilderUtil.viewVoucher(vheadId) ;  \n  formJson = Wb.decode(headJson) ;\n\n  // 处理信息\n  if(optype == 'copy'){\n\tformJson.v_write_off = '' ;\n\tformJson.v_write_off_num = '' ;\n\tformJson.v_serial_no = '' ;\n\tformJson.ldPeriod = '' ;\n\tformJson.accountDate = '' ;\n\tformJson.v_head_id = '' ;\n    formJson.v_is_signed = '' ;\n    formJson.v_status = '1' ;\n    formJson.v_is_signed = '' ;\n\tformJson.v_created_by = createdBy;\n\tformJson.v_created_name = createdName;\n    formJson.v_verifier = '' ;\n    formJson.v_signatory = '' ;\n    formJson.v_bookkeeper = '' ;\n    \n  }else if(optype == 'write_off'){\n\tformJson.v_write_off = 'Y' ;\n\tformJson.v_write_off_num = vheadId ;\n    formJson.oldSerialNo = formJson.v_serial_no ;\n\tformJson.v_serial_no = '' ;\n    formJson.oldAccDate = formJson.accountDate ;\n    formJson.accountDate = new java.util.Date();\n\tformJson.ldPeriod = '' ;\n\tformJson.v_head_id = '' ;\n    formJson.v_status = '1' ;\n\tformJson.v_created_by = createdBy;\n\tformJson.v_created_name = createdName;\n    formJson.v_verifier = '' ;\n    formJson.v_signatory = '' ;\n    formJson.v_bookkeeper = '' ;\n    \n  }else{\n  }  \n  \n}else{\n  // 新增凭证\n  formJson.v_created_by = createdBy;\n  formJson.v_created_name = createdName;\n  formJson.v_verifier = '' ;\n  formJson.v_signatory = '' ;\n  formJson.v_bookkeeper = '' ;\n}\nrequest.setAttribute(\"formJSON\",Wb.encode(formJson)) ;\n\n\n\n","itemId":"module"},"events":{"initialize":"// TODO: 定义窗口对象\nExt.apply(app,{\n  initWindow:function(params){\n    Ext.apply(app, params);\n    app.newWin.setTitle(params.title);\n    Wb.setValue(app.ledger,{'ledger':params.ledgerId}) ;\n    // 设置窗口高度与宽度\n    var _width = params.width ;\n    if(_width === \"\" || _width === null || _width === undefined){\n      _width = document.body.clientWidth*(0.8) ;\n    }\n    var _height = params.height ;\n    if(_height === \"\" || _height === null || _height === undefined){\n      _height = document.body.clientHeight*(0.9) ;\n    }\n    app.newWin.setWidth(_width) ;\n    app.newWin.setHeight(_height) ;    \n    \n    app.newWin.show() ;\n  }\n});\n\n// TODO: 增加合计行\nfunction addTotalLine(){\n  Ext.define('lineModel', {  \n      extend: 'Ext.data.Model',  \n      fields: [  \n          {name: 'LINE_ID'},  \n          {name: 'CA_ID'},\n          {name: 'DIM_ID'},\n          {name: 'CCID'},\n          {name: 'SUMMARY'},  \n          {name: 'CCID_FULL_NAME'},  \n          {name: 'AMOUNT'},  \n          {name: 'EXCHANGE_RATE'},  \n          {name: 'ENTER_DR'},  \n          {name: 'ENTER_CR'},  \n          {name: 'ACCOUNT_DR'},  \n          {name: 'ACCOUNT_CR'},\n          {name: 'IS_SUM'}\n       ]  \n  });\n  var r = Ext.create('lineModel', {\n    'LINE_ID':'',\n    'CA_ID':'',\n    'DIM_ID':'',\n    'CCID':'',\n    'SUMMARY':'合计', \n    'CCID_FULL_NAME':'',\n    'AMOUNT': '',\n    'EXCHANGE_RATE':'',\n    'ENTER_DR':'',\n    'ENTER_CR':'',\n    'ACCOUNT_DR':'',\n    'ACCOUNT_CR':'',\n    'IS_SUM':'Y'\n  });\n  var p = app.grid1.store.getCount() ;\n  app.grid1.store.insert(p,r);\n}\n  \n// TODO: 增加空科目分录行\nfunction addEntryLines(type){\n  Ext.define('lineModel', {  \n      extend: 'Ext.data.Model',  \n      fields: [  \n          {name: 'LINE_ID'},  \n          {name: 'CA_ID'},\n          {name: 'DIM_ID'},\n          {name: 'CCID'},\n          {name: 'SUMMARY'},  \n          {name: 'CCID_FULL_NAME'},  \n          {name: 'AMOUNT'},  \n          {name: 'EXCHANGE_RATE'},  \n          {name: 'ENTER_DR'},  \n          {name: 'ENTER_CR'},  \n          {name: 'ACCOUNT_DR'},  \n          {name: 'ACCOUNT_CR'},\n          {name: 'IS_SUM'}\n       ]  \n  });\n  var r = Ext.create('lineModel', {\n    'LINE_ID':'',\n    'CA_ID':'',\n    'DIM_ID':'',\n    'CCID':'',\n    'SUMMARY':(type=='auto' ? '' : ''), \n    'CCID_FULL_NAME':'',\n    'AMOUNT': '',\n    'EXCHANGE_RATE':1,\n    'ENTER_DR':'',\n    'ENTER_CR':'',\n    'ACCOUNT_DR':'',\n    'ACCOUNT_CR':'',\n    'IS_SUM':'N'\n  });\n  var p = app.grid1.store.getCount()-1 ;\n  app.grid1.store.insert(p,r);\n}\n\n\n//加法函数，用来得到精确的加法结果\n//说明：javascript 的加法结果会有误差，在两个浮点数相加的时候会比较明显。这个函数返回较为精确的加法结果。\n//调用：accAdd(arg1,arg2)\n//返回值：arg1 加上 arg2 的精确结果\nfunction accAdd(arg1,arg2){\n  var r1,r2,m;\n  try{\n    r1 = arg1.toString().split('.')[1].length ;\n  }catch(e){\n    r1 = 0 ;\n  }\n  try{\n    r2 = arg2.toString().split('.')[1].length ;\n  }catch(e){\n    r2 = 0 ;\n  }\n  m = Math.pow(20,Math.max(r1,r2));\n  return (arg1 * m + arg2 * m) / m;\n}\n\n//乘法函数，用来得到精确的乘法结果\n//说明：javascript 的乘法结果会有误差，在两个浮点数相乘的时候会比较明显。这个函数返回较为精确的乘法结果。\n//调用：accMul(arg1,arg2)\n//返回值：arg1 乘以 arg2 的精确结果\nfunction accMul(arg1,arg2){\n    var m = 0,s1 = arg1.toString(),s2 = arg2.toString();\n    try{\n      m += s1.split('.')[1].length ;\n    }catch(e){\n    }\n    try{\n      m += s2.split('.')[1].length ;\n    }catch(e){\n    }\n    var tmp = Number(s1.replace('.',''))*Number(s2.replace('.','')) / Math.pow(10,m);\n    return tmp ;\n}\n\n// TODO: 金额大写转换函数\nfunction amtTransChinese(num){ \n  var tmpNum = Number(num) ;\n  if(tmpNum < 0){\n    num = Math.abs(num) ;\n  }\n  \n  // 判断是否为数字\n  if (!/^(0|[1-9]\\d*)(\\.\\d{1,2})?$/.test(num)) {\n    num = 0;\n  }\n  \n  var unit = \"仟佰拾亿仟佰拾万仟佰拾元角分\", str = \"\";\n  num += \"00\";\n  var point = num.indexOf('.');\n  if (point >= 0) {\n    num = num.substring(0, point) + num.substr(point + 1, 2);\n  }\n  unit = unit.substr(unit.length - num.length);\n  for (var i = 0; i < num.length; i++) {\n    str += '零壹贰叁肆伍陆柒捌玖'.charAt(num.charAt(i)) + unit.charAt(i);\n  }  \n  var newVal = str.replace(/零(仟|佰|拾|角)/g, \"零\").replace(/(零)+/g, \"零\").replace(/零(万|亿|元)/g, \"$1\").replace(/(亿)万|(拾)/g, \"$1$2\").replace(/^元零?|零分/g, \"\").replace(/元$/g, \"元整\");\n  if(tmpNum <0){\n    newVal = '<font color=red>负'+ newVal + '<\/font>' ;\n  }\n  return newVal ;\n}\n\n// TODO: 计算折后借方数和贷方数\n// 说明：如果type=1则为汇率变动; 如果type为2则为原币借方金额变动; 如果type为3,则为原币贷方金额变动\nfunction calAccoutDCR(numValue,type){  \n  // 当前记录行\n  var rr = app.grid1.getSelection()[0] ;\n  \n  // 当前借贷方合计数\n  var store = app.grid1.getStore() ;\n  var i = store.find('IS_SUM','Y');\n  var r = store.getAt(i) ;\n  var dr = r.data.ACCOUNT_DR ;\n  var cr = r.data.ACCOUNT_CR ;\n  var edr = r.data.ENTER_DR ;\n  var ecr = r.data.ENTER_CR ;\n  if(dr === \"\" || dr === null || dr === undefined){dr = 0 ;}\n  if(cr === \"\" || cr === null || cr === undefined){cr = 0 ;} \n  if(edr === \"\" || edr === null || edr === undefined){edr = 0 ;}\n  if(ecr === \"\" || ecr === null || ecr === undefined){ecr = 0 ;} \n \n  if(type == '1'){\n    // 当前分录借贷方数\n    var edrVal = rr.data.ENTER_DR ;\n    var cdrVal = rr.data.ENTER_CR ;\n    if(edrVal === \"\" ||　edrVal === null ||　edrVal === undefined){edrVal = 0 ;}\n    if(cdrVal === \"\" ||　cdrVal === null ||　cdrVal === undefined){cdrVal = 0 ;}    \n    // 原汇率\n    var oldEA = rr.data.EXCHANGE_RATE ;\n    if(oldEA === \"\" || oldEA === null || oldEA === undefined){oldEA = 0 ;}\n    // 新汇率\n\tvar newEA = numValue ;\n    if(newEA === \"\" || newEA === null || newEA === undefined){newEA = 0 ;}\n    // 重新计算折后借方金额\n    if(edrVal>0){\n      var newAccDR = accMul(newEA,edrVal) ;\n      var t_newAccDR = dr + newAccDR - accMul(oldEA,edrVal) ;\n      rr.set('ACCOUNT_DR', newAccDR)  ;\n      r.set('ACCOUNT_DR', t_newAccDR)  ;\n      //折后金额转换为大写\n      if(t_newAccDR == cr && t_newAccDR !== 0){\n        var cstr = amtTransChinese(t_newAccDR) ;\n        r.set('CCID_FULL_NAME',cstr) ;\n      }else{\n        r.set('CCID_FULL_NAME','') ;\n      }\n    }\n    // TODO: 重新计算折后贷方金额\n    if(cdrVal>0){\n      var newAccCR = accMul(newEA,cdrVal) ; \n      var t_newAccCR = cr + newAccCR - accMul(oldEA,cdrVal) ;\n      rr.set('ACCOUNT_CR', newAccCR)  ; \n      r.set('ACCOUNT_CR', t_newAccCR)  ; \n      if(dr == t_newAccCR && dr !== 0){\n        var cstr_11 = amtTransChinese(dr) ;\n        r.set('CCID_FULL_NAME',cstr_11) ;\n      }else{\n        r.set('CCID_FULL_NAME','') ;\n      }\n    }    \n    \n  }else if(type === '2'){\n    // 新借方金额\n    var edrVal_2 = numValue ;\n    if(edrVal_2 === \"\" || edrVal_2 === null || edrVal_2 === undefined){edrVal_2 = 0 ;}\n    // 汇率\n    var oldEA_2 = rr.data.EXCHANGE_RATE ;\n    if(oldEA_2 === \"\" || oldEA_2 === null || oldEA_2 === undefined){oldEA_2 = 0 ;}\n    // 当前分录原借方金额\n    var old_edrVal_2 = rr.data.ENTER_DR ;\n    if(old_edrVal_2 === \"\" || old_edrVal_2 === null || old_edrVal_2 === undefined){old_edrVal_2 = 0 ;}\n    // 原币新借方合计数\n    rr.set('ENTER_DR',edrVal_2) ;\n\tr.set('ENTER_DR', edr + edrVal_2 - old_edrVal_2) ; \n    \n    // 重新计算折后借方金额\n    var newACCDR_2 = accMul(edrVal_2,oldEA_2) ;\n    var t_newAccDR_2 = dr + newACCDR_2 - accMul(old_edrVal_2,oldEA_2) ;\n    rr.set('ACCOUNT_DR',newACCDR_2) ;\n    r.set('ACCOUNT_DR', t_newAccDR_2)  ;\n    \n    //折后金额转换为大写\n    if(t_newAccDR_2 == cr && t_newAccDR_2 !== 0){\n      var cstr_2 = amtTransChinese(t_newAccDR_2) ;\n      r.set('CCID_FULL_NAME',cstr_2) ;\n    }else{\n      r.set('CCID_FULL_NAME','') ;\n    }\n    \n  }else if(type === '3'){\n    // 贷方金额\n    var ecrVal_2 = numValue ;\n    if(ecrVal_2 === \"\" || ecrVal_2 === null || ecrVal_2 === undefined){ecrVal_2 = 0 ;}\n    // 汇率\n    var oldEA_3 = rr.data.EXCHANGE_RATE ;\n    if(oldEA_3 === \"\" || oldEA_3 === null || oldEA_3 === undefined){oldEA_3 = 0 ;}\n    // 当前分录原贷方金额\n    var old_ecrVal_2 = rr.data.ENTER_CR ;\n    if(old_ecrVal_2 === \"\" || old_ecrVal_2 === null || old_ecrVal_2 === undefined){old_ecrVal_2 = 0 ;}\n    // 原币新贷方合计数\n    rr.set('ENTER_CR',ecrVal_2);\n\tr.set('ENTER_CR', ecr + ecrVal_2 - old_ecrVal_2) ; \n    \n    // 重新计算折后贷方金额\n    var newAccCR_2 = accMul(ecrVal_2,oldEA_3)  ;\n    var t_newAccCR_2 = cr + newAccCR_2 - accMul(old_ecrVal_2,oldEA_3) ;\n    rr.set('ACCOUNT_CR', newAccCR_2)  ;\n    r.set('ACCOUNT_CR', t_newAccCR_2)  ;\n    \n    if(t_newAccCR_2 == dr && dr !== 0){\n      var cstr_3 = amtTransChinese(dr) ;\n      r.set('CCID_FULL_NAME',cstr_3) ;\n    }else{\n      r.set('CCID_FULL_NAME','') ;\n    }\n  }else{\n  }\n}\n\n// TODO: 计算借贷方的合计数\nfunction calTotal4DCR(){\n  var t_dr ; // 借方合计数\n  var t_cr ; // 贷方合计数\n  var flag = '0' ;\n  var a = [] ;\n  var records = Wb.getData(app.grid1) ;\n  if(records.length > 0){\n    Wb.each(records, function(r){\n      var ldr = r.ACCOUNT_DR ;\n      var lcr = r.ACCOUNT_CR ;\n      var ccid = r.CCID ; // 合法的凭证分录\n      if(ccid !== null && ccid !== \"\" && ccid !== undefined){\n        if(ldr >0 && lcr>0){\n          flag = '1' ;\n        }\n        if(t_dr === null || t_dr === \"\" || t_dr === undefined){\n          t_dr = accAdd(0,ldr) ;\n        }else{\n          t_dr = accAdd(t_dr,ldr) ;\n        }\n        if(t_cr === null || t_cr === \"\" || t_cr === undefined){\n          t_cr = accAdd(0,lcr) ;\n        }else{\n          t_cr = accAdd(t_cr,lcr) ;\n        }\n      }\n    });\n    a.push(Ext.Number.toFixed(t_dr,2)) ;\n    a.push(Ext.Number.toFixed(t_cr,2)) ;\n    a.push(flag) ;\n  }\n  return a ;\n}\n\n// TODO: 是否为银行或现金科目\nfunction isContainBankOrCashAcc(){\n  var tt = 0 ;\n  var records = Wb.getData(app.grid1) ;\n  if(records.length > 0){\n    Wb.each(records, function(r){\n      if(r.IS_BC_ACC == 'Y'){\n        tt = tt+1 ;\n      }\n    });\n  }\n  if(tt === 0){\n    return \"N\" ;\n  }else{\n    return \"Y\" ;\n  }\n}\n\n// TODO: 凭证保存前的校验函数\nfunction beforeSaveVerify(){\n  // TODO: 判断表单信息是否填写正确\n  var ledgerId = app.ledger.getValue() ;\n  if(ledgerId === \"\" || ledgerId === null || ledgerId === undefined){\n    Wb.toast(\"请选择账簿信息\");\n    return false ;\n  }\n  var accDate = app.accountDate.getValue() ;\n  if(accDate === \"\" || accDate === null || accDate === undefined){\n    Wb.toast(\"请选择会计日期\");\n    return false ;\n  }\n  var ldPeriod = app.ldPeriod.getValue() ;\n  if(ldPeriod === \"\" || ldPeriod === null || ldPeriod === undefined){\n    Wb.toast(\"会计期不能为空\");\n    return false ;\n  }\n  var vCategory = app.v_category.getValue() ;\n  if(vCategory === \"\" || vCategory === null || vCategory === undefined){\n    Wb.toast(\"请选择凭证分类\");\n    return false ;\n  }\n\n  // TODO: 判断分录信息是否填写正确\n  var entries = Wb.getData(app.grid1) ;\n  if(entries.length === 0){\n    Wb.toast(\"请填写凭证分录信息!\") ;\n    return false;\n  }else if(entries.length === 1){\n    // TODO: 如果只有一条凭证分录信息\n    Wb.toast(\"单个凭证中不能只存在一条凭证分录!\") ;\n    return false ;\n  }else{\n    // 判断凭证分录的CCID信息是否正确\n    var aa = 0 ;\n    var i = 0 ;\n    var bb = 0 ;\n    var entryMsg ;\n    var sMsg ; \n    Wb.each(entries, function(r){\n      i++ ;\n      var c1 = (r.CCID === '' || r.CCID === null || r.CCID === undefined) ;\n      var c2 = (r.CCID_FULL_NAME !== '' && r.CCID_FULL_NAME !== null && r.CCID_FULL_NAME !== undefined) ;\n      var isSum = r.IS_SUM ;\n      if(c1 && c2 && isSum !== 'Y'){\n        aa = aa+1 ;\n        entryMsg = '第'+i+'行分录的科目名称/辅助核算录入不正确!' ;\n      }\n      \n      var cc = (r.CCID !== '' && r.CCID !== null && r.CCID !== undefined) ;\n      var ss = (r.SUMMARY === '' || r.SUMMARY === null || r.SUMMARY === undefined) ; \n      if(cc && isSum !== 'Y' && ss){\n        bb = bb + 1 ;\n        sMsg = '第'+i+'行分录行摘要信息不能为空!' ;\n      }\n    });       \n    if(aa !== 0){\n      Wb.toast(entryMsg) ;\n      return false ;\n    }\n    // 缺少行摘要信息\n    if(bb !== 0){\n      Wb.toast(sMsg) ;\n      return false ;\n    }\n  }\n  \n  return true ;\n}\n\n/**\n * 执行凭证保存处理。\n *\n * @param {type} btnType 当前操作类型\n * @param {type} optype 可选参数说明。\n * @param {type} ctxPath 根目录\n * @return {type} 返回值说明。\n */\nfunction handlerVoucher(btnType,optype,ctxPath){\n  // TODO: 判断表单信息是否填写正确\n  if(beforeSaveVerify()){ \n    // 计算借贷方合计数\n    var a = calTotal4DCR() ;\n    // 判断同一行分录中是否存在借方和贷方均不为0\n    if(a[2] == '1'){\n      Wb.toast('凭证分录行中不能存在借方和贷方金额都大于0的分录信息!') ;\n      return false ;\n    }\n    // 判断凭证分录信息是否满足借贷平衡\n    if(a[0] !== a[1]){\n      Wb.toast('凭证分录借贷不平衡,请确认!') ;\n      return false ;\n    }else{\n      app.v_total_dr.setValue(Number(a[0]));\n      app.v_total_cr.setValue(Number(a[1])) ;\n    }\t\n    // 判读是否需要出纳签字\n    var signFlag = isContainBankOrCashAcc() ;\n    app.v_is_signed.setValue(signFlag) ;\n    // 去除空分录行信息\n    var rows = Wb.getData(app.grid1) ;\n    var lines = [] ;\n    if(rows.length > 0){\n      Wb.each(rows, function(r){\n        if(r.CCID !== '' && r.CCID !== null && r.CCID !== undefined){\n          lines.push(r) ;\n        }\n      });\n    }      \n    // 获取参数信息\n    var infoJson = Wb.getValue(app.form1) ;        // 当前凭证头信息\n    infoJson.pickComp = '' ;\n    var serialNo = app.v_serial_no.getValue() ;\n    if(serialNo === null || serialNo === undefined){\n      infoJson.v_serial_no = \"\" ;\n    }\n    var infoArray = Wb.encode(lines) ;             // 当期凭证分录行信息\n    var paramJson = Wb.encode({'optype':optype}) ; // 扩展参数\n    \n    // 请求地址\n    var ajaxUrl ;\n    if(btnType == 'save'){  \n      // 凭证保存\n      ajaxUrl = ctxPath + '/voucherHandlerAction.do?method=saveVoucher' ; \n\t}else if(btnType == 'submit'){\n      // 提交凭证\n      ajaxUrl = ctxPath + '/voucherHandlerAction.do?method=submitVoucher' ; \n    }else{\n      return false;\n    }\n    \n    // TODO: 进度条\n    var msg = Ext.MessageBox.show({\n      title:'请等待',\n      msg:'正在提交请求，请稍后...',\n      width:240,\n      wait:true,\n      progress :true,\n      closable :false\n    });\n    \n    // TODO: 提交请求\n    Wb.request({\n      url: ajaxUrl,\n      timeout:3600000,\n      params: {\n        'infoJson' : infoJson,\n        'infoArray': infoArray,\n        'paramJson': paramJson\n      },\n      success: function(response) {\n        msg.hide() ;\n        var resp = Wb.decode(response.responseText);      \n        if(resp.flag == \"0\"){ // 保存或提交成功\n          app.v_head_id.setValue(resp.vheadId) ;\n          app.ledger.setReadOnly(true) ;\n          app.grid1.getStore().load({params:{'headId':resp.vheadId}}) ;\n          // 加载Grid\n          if(typeof app.loadGridData == 'function'){\n            app.loadGridData() ;            \n          }\n          \n          // 提交后处理\n          if(btnType == 'submit'){\n            // 设置凭证编号\n            app.v_serial_no.setValue(resp.vSerialNo) ;\n            app.v_status.setValue('2') ;\n            // 置灰按钮\n            app.saveBtn.disable() ;\n            app.submitBtn.disable() ;\n            app.addLine.disable() ;\n            app.delLine.disable() ;\n            // 置灰表单\n            app.accountDate.setReadOnly(true) ;\n            app.ldPeriod.setReadOnly(true) ;\n            app.v_attchment_num.setReadOnly(true) ;\n            app.v_category.setReadOnly(true) ;\n            app.v_summary.setReadOnly(true) ;\n          }\n          // 凭证ID不为空时则不能修改\n          if(!Wb.isEmpty(app.v_head_id) && !Wb.isEmpty(app.v_serial_no)){\n            app.v_serial_no.setReadOnly(true) ;\n            app.v_category.setReadOnly(true) ;\n          }\n        }\n        Wb.toast(resp.msg)  ;\n      }\n    });    \n  } \n}\n"},"children":[{"configs":{"maximized":"false","layout":"border","resizable":"false","closeAction":"destroy","border":"false","itemId":"newWin","modal":"true","maximizable":"true"},"events":{"hide":"app.loadGridData();","beforeshow":"// 凭证接入方式：single-总账单凭证录入, list-总账凭证列表进入, xcex-费用报销模块进入, xcap-应付模块进入\nvar method = '{#method#}';\nif(method === 'single'){\n  app.newWin.setTitle('&nbsp;') ;\n  \n}else if(method === 'list'){\n  // 采用窗口的默认配置\n  \n}else{\n  // 采用窗口的默认配置\n}","close":"// 凭证接入方式：single-总账单凭证录入, list-总账凭证列表进入, xcex-费用报销模块进入, xcap-应付模块进入\nvar method = '{#method#}';\nif(method === 'single'){\n  var win = window;\n  while(win != win.parent){\n    win = win.parent;\n  }\n  var tabPanel = win.app.funTabPanel;\n  //获取当前激活页签\n  var actTab = tabPanel.activeTab;\n  //关闭页签\n  tabPanel.remove(actTab);  \n}\n\n"},"children":[{"configs":{"region":"north","itemId":"topPanel","border":"false"},"children":[{"configs":{"border":"true","itemId":"toolbar1"},"children":[{"configs":{"text":"{#saveBtn#}","itemId":"saveBtn","iconCls":"save_icon"},"events":{"click":"// 凭证状态\nvar vs = app.v_status.getValue() ;\nif(vs == '2'){\n  Wb.toast('凭证已提交') ;\n  return false ;\n}\n// 执行保存\nhandlerVoucher('save','{#optype#}', '{#ctxPath#}') ;\n"},"children":[],"expanded":true,"type":"button"},{"configs":{"text":"{#submitBtn#}","itemId":"submitBtn","iconCls":"up_icon"},"events":{"click":"// 凭证状态\nvar vs = app.v_status.getValue() ;\nif(vs == '2'){\n  Wb.toast('凭证已提交') ;\n  return false ;\n}\n// TODO: 执行提交\nhandlerVoucher('submit','{#optype#}', '{#ctxPath#}') ;\n"},"children":[],"expanded":true,"type":"button"},{"configs":{"text":"{#newBtn#}","itemId":"newBtn","iconCls":"file_add_icon"},"events":{"click":"// TODO: 重置凭证头信息\nvar oldVT = app.v_template_type.getValue() ;\nWb.reset(app.form1) ;\n// app.form1.getForm().reset() ;\n\n// 设置按钮可用\napp.saveBtn.enable() ;\napp.submitBtn.enable() ;\napp.addLine.enable() ;\napp.delLine.enable() ;\n\n// 凭证状态和模板分类\napp.v_status.setValue('1') ;\napp.v_template_type.setValue(oldVT) ;\n\n// 设置凭证分类\nif(app.v_category.getStore().getCount() == 1){\n  var r = app.v_category.getStore().getAt(0);\n  Wb.setValue(app.v_category,{'v_category':r.data.ID}) ;\n}else{\n  app.label1.setText(\"<h2 align='center'><b>凭证<\/b><\/h2>\",false) ;\n}\napp.v_category.setReadOnly(false) ;\n\n// 设置账簿和会计期\nif(app.ledger.getStore().getCount() == 1){\n  var rr = app.ledger.getStore().getAt(0) ;\n  Wb.setValue(app.ledger,{'ledger':rr.data.ID}) ;\n  // 计算账簿默认会计日期和会计期\n  Wb.request({\n    url: 'm?xwl=xc/gl/journal/data-db/common-data/get-acc-date',\n    params: {'ledgerId':rr.data.ID},\n    success: function(resp) {\n      var response = Wb.decode(resp.responseText) ;\n      app.accountDate.setValue(Wb.strToDate(response.accDate));\n      app.accountDate.fireEvent('change') ;\n      // 查询凭证断号信息\n      app.v_serial_no.setValue() ;\n      app.v_serial_no.getStore().load();\n    }\n  });\n}\napp.ledger.setReadOnly(false) ;\n\n// TODO: 清空凭证行信息\napp.grid1.getStore().removeAll() ;\n\n// TODO: 初始化空分录行\naddTotalLine(); // 合计行\nfor(var i=0; i<5; i++){\n  addEntryLines() ;\n}\n\n// TODO: 清空凭证人员信息\nWb.reset(app.bbar) ;\napp.v_created_by.setValue('{#XIP.userId#}') ;\napp.v_created_name.setValue('{#XIP.empName#}') ;"},"children":[],"expanded":true,"type":"button"},{"configs":{"text":"{#copyBtn#}","itemId":"copyBtn","iconCls":"copy_icon"},"events":{"click":"// TODO: 凭证复制\nWb.confirm(\"您确定要复制当前凭证吗?\",function(){\n  // 设置按钮可用\n  app.saveBtn.enable() ;\n  app.submitBtn.enable() ;\n  app.addLine.enable() ;\n  app.delLine.enable() ;  \n  \n  // 凭证状态和模板分类\n  app.v_status.setValue('1') ;  \n  app.v_head_id.setValue() ;\n  app.v_write_off.setValue() ;\n  app.v_write_off_num.setValue() ;\n  app.v_is_signed.setValue() ;\n  \n  app.accountDate.setValue() ;\n  app.ldPeriod.setValue() ;\n  app.v_serial_no.setValue() ;\n  \n  app.accountDate.setReadOnly(false) ;\n  app.v_summary.setReadOnly(false) ;\n\n  // 设置凭证分类\n  var catStore = app.v_category.getStore() ;\n  if(catStore.getCount() == 1){\n    var r = catStore.getAt(0);\n    Wb.setValue(app.v_category,{'v_category':r.data.ID}) ;\n  }else{\n    app.label1.setText(\"<h2 align='center'><b>凭证<\/b><\/h2>\",false) ;\n  }\n  app.v_category.setReadOnly(false) ;\n  \n  // 设置账簿和会计期\n  var ldStore = app.ledger.getStore() ;\n  if(ldStore.getCount() == 1){\n    var rr = ldStore.getAt(0) ;\n    Wb.setValue(app.ledger,{'ledger':rr.data.ID}) ;\n    // 计算账簿默认会计日期和会计期\n    Wb.request({\n      url: 'm?xwl=xc/gl/journal/data-db/common-data/get-acc-date',\n      params: {'ledgerId':rr.data.ID},\n      success: function(resp) {\n        var response = Wb.decode(resp.responseText) ;\n        app.accountDate.setValue(Wb.strToDate(response.accDate));\n        app.accountDate.fireEvent('change') ;\n        // 查询凭证断号信息\n        app.v_serial_no.getStore().load();\n      }\n    });\n  }\n  // 判断账簿是否可选\n  var lineStore = app.grid1.getStore() ;\n  if(lineStore.getCount() >0){\n    app.ledger.setReadOnly(true) ;\n  }else{\n    app.ledger.setReadOnly(false) ;\n  }\n  // 清空Grid的分录ID\n  for(var i=0; i<lineStore.getCount(); i++){\n    var rec = lineStore.getAt(i) ;\n    rec.set('LINE_ID','') ;\n  }  \n  \n  // TODO: 清空凭证人员信息\n  Wb.reset(app.bbar) ;\n  app.v_created_by.setValue('{#XIP.userId#}') ;\n  app.v_created_name.setValue('{#XIP.empName#}') ;\n}) ;"},"children":[],"expanded":true,"type":"button"},{"configs":{"text":"{#printBtn#}","hidden":"true","itemId":"printBtn","iconCls":"printer_icon"},"children":[],"expanded":true,"type":"button"},{"configs":{"text":"{#backBtn#}","hidden":"true","itemId":"backBtn","iconCls":"undo_icon"},"events":{"click":"// TODO: 提交请求计算上一张凭证\n\nWb.info('开发中...') ;\n\n// Wb.request({\n//   url: 'm?xwl=xc/gl/journal/data-db/new-voucher-data/get-back-or-next-v',\n//   params: {},\n//   success: function(resp) {}\n// });"},"children":[],"expanded":true,"type":"button"},{"configs":{"text":"{#nextBtn#}","hidden":"true","itemId":"nextBtn","iconCls":"redo_icon"},"events":{"click":"// TODO: 提交请求计算下一张凭证\nWb.info('开发中...') ;\n\n\n// Wb.request({\n//   url: 'm?xwl=xc/gl/journal/data-db/new-voucher-data/get-back-or-next-v',\n//   params: {},\n//   success: function(resp) {}\n// });"},"children":[],"expanded":true,"type":"button"},{"configs":{"hidden":"true","width":"250","labelAlign":"right","itemId":"v_serial_num","fieldLabel":"{#v_serial_num#}"},"children":[],"expanded":true,"type":"text"},{"configs":{"text":"->","itemId":"sep"},"children":[],"expanded":false,"type":"item"},{"configs":{"text":"Help","itemId":"help","iconCls":"help_icon","tooltip":"<font color=red>说明：拖动表格行可调整分录序号<\/font>"},"events":{"click":"Wb.toast('拖动表格行可调整分录序号') ;"},"children":[],"expanded":false,"type":"button"},{"configs":{"text":"SUM","itemId":"sumLines","iconCls":"total_icon","tooltip":"<font color=red>重新计算凭证借贷方合计数<\/font>"},"events":{"click":"// 重新计算借方和贷方合计数\nvar records = Wb.getData(app.grid1) ;\nif(records.length > 0){\n  var t_dr ; // 借方合计数\n  var t_cr ; // 贷方合计数\n  \n  // 计算\n  Wb.each(records, function(r){\n    var ldr = r.ACCOUNT_DR ;\n    var lcr = r.ACCOUNT_CR ;\n    var isSum = r.IS_SUM ;\n    // 非合计行\n    if(isSum !== 'Y'){\n      if(t_dr === null || t_dr === \"\" || t_dr === undefined){\n        t_dr = accAdd(0,ldr) ;\n      }else{\n        t_dr = accAdd(t_dr,ldr) ;\n      }\n      if(t_cr === null || t_cr === \"\" || t_cr === undefined){\n        t_cr = accAdd(0,lcr) ;\n      }else{\n        t_cr = accAdd(t_cr,lcr) ;\n      }\n    }\n  });\n  // 合计行\n  var store = app.grid1.getStore() ;\n  var idx = store.find('IS_SUM','Y');\n  var r = store.getAt(idx) ;\n  \n  r.set('ACCOUNT_DR',t_dr) ;\n  r.set('ACCOUNT_CR',t_cr) ;\n  app.v_total_dr.setValue(t_dr) ;\n  app.v_total_cr.setValue(t_cr) ;\n\n  store.commitChanges();  \n}\n\n\n"},"children":[],"expanded":false,"type":"button"}],"expanded":true,"type":"toolbar"}],"expanded":true,"type":"panel"},{"configs":{"region":"center","layout":"border","itemId":"mainPanel","border":"false"},"children":[{"configs":{"region":"north","itemId":"form1","border":"false"},"events":{"afterrender":"// TODO: 根据凭证操作操作类型，执行凭证赋值处理\nvar op = '{#optype#}' ;\nif(op == 'copy' || op == 'write_off' || op == 'modify'){   \n  // TODO: 如果为复制、冲销和修改凭证处理时，则重新执行赋值处理\n  var fdata = '{#formJSON#}' ;\n  var initdata = Wb.decode(fdata);\n  Wb.setValue(app.form1,initdata) ;\n  \n  // 设置冲销凭证号和摘要信息\n  if(op == 'write_off'){\n    var _serialNo = initdata.oldSerialNo ;\n    var oldSummary = '冲销【'+ _serialNo + \"】凭证\" ;\n    app.v_summary.setValue(oldSummary) ;\n    app.v_summary.setReadOnly(true) ;\n  }\n  \n  // TODO: 设置会计日期\n  if(op == 'modify'){\n    var accDate = initdata.accountDate ;\n    app.accountDate.setValue(Wb.strToDate(accDate));\n  }\n  \n}else{\n  // 新增凭证\n  app.v_template_type.setValue('{#templateType#}') ;\n  app.v_status.setValue('1') ;\n}\n\n// 设置会计日期\nif(op == 'copy' || op == 'write_off' || op == 'add'){\n  app.accountDate.setValue(Wb.strToDate('{#accDate#}'));\n}"},"children":[{"configs":{"height":"60","layout":"fit","columnWidth":"1","itemId":"panel1","border":"false"},"children":[{"configs":{"height":"36","itemId":"label1"},"events":{"afterrender":"label.setText(\"<h2 align='center'><b>凭证<\/b><\/h2>\",false) ;"},"children":[],"expanded":true,"type":"label"}],"expanded":false,"type":"panel"},{"configs":{"height":"40","layout":"column","columnWidth":"1","itemId":"panel2","border":"false"},"children":[{"configs":{"layout":"fit","columnWidth":".3","border":"false","itemId":"tr2_1"},"children":[{"configs":{"labelWidth":"80","displayField":"NAME","valueField":"ID","labelAlign":"right","itemId":"ledger","fieldLabel":"{#ledger#}"},"events":{"afterrender":"var op = '{#optype#}' ;\nif(op == 'write_off' || op == 'modify' || op == 'copy'){\n  app.ledger.setReadOnly(true) ;\n}else{\n  app.ledger.enable();\n}","select":"// TODO: 日期赋值\napp.ldPeriod.setValue() ;\n\n// TODO: 计算账簿默认会计日期和会计期\nWb.request({\n  url: 'm?xwl=xc/gl/journal/data-db/common-data/get-acc-date',\n  params: {'ledgerId':combo.getValue()},\n  success: function(resp) {\n    var response = Wb.decode(resp.responseText) ;\n    app.accountDate.setValue(Wb.strToDate(response.accDate));\n    app.accountDate.fireEvent('change') ;\n  }\n});\n\n// TODO: 科目赋值\napp.pickComp.getStore().load();"},"children":[{"configs":{"autoLoad":"true","itemId":"store","url":"m?xwl=xc/com-qry/gl-ledgers/select-sec-ledger"},"events":{"load":"var op = '{#optype#}' ;\n\n// TODO: 取第一条数据作为默认值\nif(store.getCount() == 1){\n  var r = records[0];\n  Wb.setValue(app.ledger,{'ledger':r.data.ID}) ;\n\n  // 计算账簿默认会计日期和会计期\n  if(op == 'copy' || op == 'write_off' || op == 'add'){\n    Wb.request({\n      url: 'm?xwl=xc/gl/journal/data-db/common-data/get-acc-date',\n      params: {'ledgerId':r.data.ID},\n      success: function(resp) {\n        var response = Wb.decode(resp.responseText) ;\n        app.accountDate.setValue(Wb.strToDate(response.accDate));\n        app.accountDate.fireEvent('change') ;\n      }\n    });\n  }\n}  \n"},"children":[],"expanded":true,"type":"store"}],"expanded":true,"type":"combo"}],"expanded":true,"type":"panel"},{"configs":{"layout":"fit","columnWidth":".2","border":"false","itemId":"tr2_2"},"children":[{"configs":{"labelWidth":"100","labelAlign":"right","itemId":"accountDate","fieldLabel":"{#accountDate#}"},"events":{"change":"// TODO: 操作类型\nvar op = '{#optype#}' ;\n\n// TODO: 冲销凭证的日期不能早于被冲销凭证的制单日期\nif(op == 'write_off'){\n  var fdata = '{#formJSON#}' ;\n  var vdata = Wb.decode(fdata);\n  var oldAccDate = vdata.oldAccDate ;\n\n  var cdate = Date.parse(newValue) ; // 冲销凭证日期\n  var oldDate = Date.parse(oldAccDate) ; // 被冲销凭证日期\n  if(cdate<oldDate){\n    var dd = Wb.format(oldAccDate,Wb.dateFormat) ;\n    Wb.toast('冲销凭证日期不能早于被冲销凭证的制单日期<font color=red>【'+dd.substr(0,10)+\"】<\/font>\") ;\n    app.ldPeriod.setValue() ;\n    app.ldPeriod.setReadOnly(true) ;\n    return false ;\n  }\n}\n\n// TODO: 修改凭证且凭证编号已经存在,则此时会计日期不能跨月处理\nif(op == 'modify'){\n  var i = 0 ;\n  Wb.request({\n    url: 'm?xwl=xc/gl/journal/data-db/common-data/get-period-date',\n    async : false ,\n    params: {\n      'pcode' : app.ldPeriod.getValue() \n    },\n    success: function(resp) {\n      var response = Wb.decode(resp.responseText) ;\n      var rr = response.rows[0] ;\n      var sdate = rr.START_DATE ;\n      var edate = rr.END_DATE ;\n      var cdate = Date.parse(newValue) ; // 冲销凭证日期\n      if(Date.parse(sdate)> cdate || cdate > Date.parse(edate) ){\n        Wb.toast('凭证编号已经存在, 不能选择跨月日期') ;\n        i++ ;\n      }\n    }\n  });\n  // 日期校验不通过则返回\n  if(i >0){\n    app.accountDate.setValue(oldValue) ;\n    return false ;\n  }\n}\n\n// TODO: 处理会计期\napp.ldPeriod.setValue() ;\napp.ldPeriod.store.load({\n\tcallback : function(){\t\n      // 控制会计期和凭证编号的可用性\n      var totalRec = app.ldPeriod.getStore().getCount() ;\n      if(totalRec > 1){\n        app.ldPeriod.setReadOnly(false);\n        \n      }else if(totalRec == 1){\n        app.ldPeriod.setReadOnly(true);\n        \n      }else{\n        app.ldPeriod.setReadOnly(true);\n        app.v_serial_no.setReadOnly(true) ;\n      }\n      // 如果会计期存在\n      if(totalRec > 0){\n        var r = app.ldPeriod.store.first() ;\n        Wb.setValue(app.ldPeriod,{'ldPeriod':r.data.CODE}) ;   \n\n        // 新增、复制和冲销凭证\n        if(op == 'add' || op == 'copy' || op == 'write_off'){\n          var headId = app.v_head_id.getValue() ;\n          if(headId === null || headId === \"\" || headId === undefined){\n            app.v_serial_no.setValue() ;\n            app.v_serial_no.getStore().load() ; \n          }else{\n            var vNo = app.v_serial_no.getValue() ;\n            if(vNo === null || vNo === \"\" || vNo === undefined){\n              app.v_serial_no.setValue() ;\n              app.v_serial_no.getStore().load() ; \n            }else{\n              app.v_serial_no.setReadOnly(true) ;\n              app.v_category.setReadOnly(true) ;\n            }\n          }\n        }else{\n          // 修改凭证\n          var sNo = app.v_serial_no.getValue() ;\n          if(sNo === null || sNo === \"\" || sNo === undefined){\n            app.v_serial_no.setValue() ;\n            app.v_serial_no.getStore().load() ; \n          }else{\n            app.v_serial_no.setReadOnly(true) ;\n            app.v_category.setReadOnly(true) ;\n          }\n        }\n      }\n    }\n}) ;"},"children":[],"expanded":true,"type":"date"}],"expanded":true,"type":"panel"},{"configs":{"layout":"fit","columnWidth":".25","border":"false","itemId":"tr2_3"},"children":[{"configs":{"labelWidth":"100","readOnly":"true","displayField":"CODE","valueField":"CODE","labelAlign":"right","itemId":"ldPeriod","fieldLabel":"{#ldPeriod#}","editable":"false"},"events":{"select":"// TODO: 操作类型\nvar op = '{#optype#}' ;\n\n// 新增、复制和冲销凭证\nif(op == 'add' || op == 'copy' || op == 'write_off'){\n  var headId = app.v_head_id.getValue() ;\n  if(headId === null || headId === \"\" || headId === undefined){\n    app.v_serial_no.setValue() ;\n    app.v_serial_no.getStore().load() ; \n  }else{\n    var vNo = app.v_serial_no.getValue() ;\n    if(vNo === null || vNo === \"\" || vNo === undefined){\n      app.v_serial_no.setValue() ;\n      app.v_serial_no.getStore().load() ; \n    }else{\n      app.v_serial_no.setReadOnly(true) ;\n      app.v_category.setReadOnly(true) ;\n    }\n  }\n}else{\n  // 修改凭证\n  var sNo = app.v_serial_no.getValue() ;\n  if(sNo === null || sNo === \"\" || sNo === undefined){\n    app.v_serial_no.setValue() ;\n    app.v_serial_no.getStore().load() ; \n  }else{\n    app.v_serial_no.setReadOnly(true) ;\n    app.v_category.setReadOnly(true) ;\n  }\n}"},"children":[{"configs":{"autoLoad":"true","itemId":"store","url":"m?xwl=xc/gl/journal/data-db/new-voucher-data/select-ld-period"},"events":{"beforeload":"store.proxy.extraParams.ledgerId=app.ledger.getValue();\nstore.proxy.extraParams.accDate=app.accountDate.getValue();"},"children":[],"expanded":true,"type":"store"}],"expanded":true,"type":"combo"}],"expanded":true,"type":"panel"},{"configs":{"layout":"fit","columnWidth":".25","border":"false","itemId":"tr2_4"},"children":[{"configs":{"labelWidth":"100","minValue":"0","value":"0","margin":"0 10 0 0","labelAlign":"right","itemId":"v_attchment_num","fieldLabel":"{#v_attchment_num#}"},"children":[],"expanded":true,"type":"number"}],"expanded":true,"type":"panel"}],"expanded":true,"type":"panel"},{"configs":{"height":"40","layout":"column","columnWidth":"1","itemId":"panel3","border":"false"},"children":[{"configs":{"layout":"fit","columnWidth":".3","border":"false","itemId":"tr3_1"},"children":[{"configs":{"labelWidth":"80","readOnly":"true","displayField":"NAME","valueField":"CODE","emptyText":"---请选择---","labelAlign":"right","itemId":"v_serial_no","fieldLabel":"{#v_serial_no#}","editable":"false"},"events":{"select":"// 置空\nvar val = combo.getValue() ;\nif(val === ''){\n  combo.setValue() ;\n}"},"children":[{"configs":{"autoLoad":"true","itemId":"store","url":"m?xwl=xc/gl/journal/data-db/new-voucher-data/select-jump-serial-no"},"events":{"load":"// TODO: 处理凭证断号信息\nif(store.getCount()>0){\n  app.v_serial_no.setReadOnly(false) ;\n  \n  // 设置空记录\n  Ext.define('serialModel', {  \n    extend: 'Ext.data.Model',  \n    fields: [  \n      {name: 'CODE'},  \n      {name: 'NAME'}\n    ]  \n  });\n  var r = Ext.create('serialModel', {\n    'CODE':'', \n    'NAME':'---请选择---'\n  });\n  store.insert(0,r); \n  \n  // 如果修改凭证且凭证编号已经存在,则不能修改\n  var op = '{#optype#}' ;\n  if(op == 'modify'){\n\tvar sNo = app.v_serial_no.getValue() ;\n    if(sNo !== null && sNo !== \"\" && sNo !== undefined){\n      app.v_serial_no.setReadOnly(true) ;\n      app.v_category.setReadOnly(true) ;\n    }\n  }\n}else{\n  app.v_serial_no.setReadOnly(true) ;\n}\n","beforeload":"store.proxy.extraParams.ledgerId = app.ledger.getValue() ;\nstore.proxy.extraParams.ppCode = app.ldPeriod.getValue() ;"},"children":[],"expanded":true,"type":"store"}],"expanded":true,"type":"combo"}],"expanded":true,"type":"panel"},{"configs":{"layout":"fit","columnWidth":".2","border":"false","itemId":"tr3_2"},"children":[{"configs":{"labelWidth":"100","displayField":"NAME","valueField":"ID","labelAlign":"right","itemId":"v_category","fieldLabel":"{#v_category#}"},"events":{"afterrender":"var op = '{#optype#}' ;\nif(op == 'write_off'){\n  app.v_category.setReadOnly(true) ;\n}else{\n  app.v_category.enable();\n}","select":"// TODO: 根据凭证分类转换凭证标题\nvar r = records[0] ;\nvar catName = r.data.CAT_NAME ;\nif(catName === null || catName === \"\"){\n  catName = '凭证' ;\n}\n\napp.label1.setText(\"<h2 align='center'><b>\"+catName+\"<\/b><\/h2>\",false) ;\n"},"children":[{"configs":{"autoLoad":"true","itemId":"store","url":"m?xwl=xc/gl/journal/data-db/common-data/select-v-category"},"events":{"load":"// TODO: 只有一个条记录时则默认\nif(store.getCount() == 1 ){\n  var r = records[0] ;\n  Wb.setValue(app.v_category, {'v_category':r.data.ID}) ;\n}\n\n// 凭证标题\nvar catId = app.v_category.getValue() ;\nvar idx = store.find('ID',catId) ;\nvar catName ;\nif(idx == -1){\n  catName = '凭证' ;\n}else{\n  var rr = store.getAt(idx) ;\n  catName = rr.data.CAT_NAME ;  \n}\napp.label1.setText(\"<h2 align='center'><b>\"+catName+\"<\/b><\/h2>\",false) ;\n"},"children":[],"expanded":true,"type":"store"}],"expanded":true,"type":"combo"}],"expanded":true,"type":"panel"},{"configs":{"layout":"fit","columnWidth":".5","margin":"0 1 0 0","border":"false","itemId":"tr3_3"},"children":[{"configs":{"labelWidth":"100","triggerCls":"x-form-search-trigger","margin":"0 10 0 0","labelAlign":"right","itemId":"v_summary","fieldLabel":"{#v_summary#}","editable":"true"},"children":[{"configs":{"tagConfigs":"minWidth:300","pagingBar":"false","height":"200","forceFit":"true","itemId":"pickComp"},"events":{"itemclick":"var name = record.get('v_summary') ;\napp.v_summary.setValue(name) ;\napp.pickComp.hide();"},"children":[{"configs":{"pageSize":"-1","autoLoad":"true","itemId":"store","url":"m?xwl=xc/gl/journal/data-db/common-data/select-ld-summaries"},"events":{"beforeload":"store.proxy.extraParams.ledgerId = app.ledger.getValue() ;"},"children":[],"expanded":true,"type":"store"},{"configs":{"itemId":"columns"},"children":[{"configs":{"text":"序号","hidden":"true","align":"center","xtype":"rownumberer","width":"60","itemId":"rownum"},"children":[],"expanded":true,"type":"column"},{"configs":{"text":"摘要ID","hidden":"true","dataIndex":"v_summary_id","itemId":"summary_id"},"children":[],"expanded":true,"type":"column"},{"configs":{"text":"{#v_summary#}","width":"200","dataIndex":"v_summary","itemId":"summary_name"},"children":[],"expanded":true,"type":"column"}],"expanded":true,"type":"array"}],"expanded":true,"type":"grid"}],"expanded":true,"type":"picker"}],"expanded":true,"type":"panel"}],"expanded":true,"type":"panel"},{"configs":{"height":"40","hidden":"true","layout":"column","columnWidth":"1","border":"false","itemId":"hiddenField"},"children":[{"configs":{"labelWidth":"80","width":"150","labelAlign":"right","itemId":"v_head_id","fieldLabel":"凭证头ID"},"children":[],"expanded":true,"type":"text"},{"configs":{"labelWidth":"80","width":"150","labelAlign":"right","itemId":"v_write_off","fieldLabel":"是否被冲销"},"children":[],"expanded":true,"type":"text"},{"configs":{"labelWidth":"90","width":"150","labelAlign":"right","itemId":"v_write_off_num","fieldLabel":"被冲销凭证号"},"children":[],"expanded":true,"type":"text"},{"configs":{"labelWidth":"80","minValue":"0","width":"150","labelAlign":"right","itemId":"v_total_dr","fieldLabel":"借方合计数"},"children":[],"expanded":true,"type":"number"},{"configs":{"labelWidth":"80","minValue":"0","width":"150","labelAlign":"right","itemId":"v_total_cr","fieldLabel":"贷方合计数"},"children":[],"expanded":true,"type":"number"},{"configs":{"width":"150","itemId":"v_is_signed","fieldLabel":"是否需要出纳签字"},"children":[],"expanded":true,"type":"text"},{"configs":{"width":"150","itemId":"v_status","fieldLabel":"凭证状态"},"children":[],"expanded":true,"type":"text"},{"configs":{"width":"150","itemId":"v_template_type","fieldLabel":"凭证模板类型"},"children":[],"expanded":true,"type":"text"}],"expanded":true,"type":"panel"}],"expanded":true,"type":"form"},{"configs":{"region":"center","columnLines":"true","pagingBar":"false","cls":"my_custom_grid","enableColumnHide":"true","forceFit":"true","itemId":"grid1","border":"false","viewConfig":"{\n  enableTextSelection:true,\n  plugins: {\n    ptype: 'gridviewdragdrop',\n    dragText: 'Drag and drop to reorganize'\n  },\n  listeners: {\n    beforedrop: function(node, data, overModel, dropPosition, dropHandlers) {\n      //此处事件是gridviewdragdrop 的放置监听事件\n      /*\n      dropHandlers.wait = true;\n      Ext.MessageBox.confirm('Drop', 'Are you sure', function(btn){\n        if (btn === 'yes') {\n          dropHandlers.processDrop();\n        } else {\n          dropHandlers.cancelDrop();\n        }\n      });\n      */\n    },\n    drop: function(node, data, overModel, dropPosition, eOpts) {\n      //data.records[0].get('name') grid中的拖动行的name列数据值\n      //overModel.get('id') tree中被拖放到的节点的id值\n      //alert(data.records[0].get('PAR_CODE'));\n      \n      // 刷新行序号\n\t  app.grid1.getView().refresh() ;\n    }\n  }\n}","editable":"true","enableColumnMove":"false"},"events":{"afterrender":"// TODO: 根据凭证操作操作类型，执行凭证赋值处理\nvar op = '{#optype#}' ;\nif(op == 'copy' || op == 'write_off' || op == 'modify'){ \n  // TODO: 将在Grid1数据信息\n  app.grid1.getStore().load({\n    params : {'headId':'{#headId#}'},\n    callback : function(){\n      // TODO: 情况凭证分录行ID\n      if(op == 'copy' || op == 'write_off' ){\n        var store = app.grid1.getStore() ;\n        if(store.getCount() > 0){\n          for(var i=0; i<store.getCount(); i++){\n            var r = store.getAt(i) ;\n            r.set('LINE_ID','') ;\n          }\n        }        \n      }\n    }\n  }) ;\n}\n\n// TODO: 初始化空分录行\nif(op == 'add'){\n  // 增加合计行\n  addTotalLine();\n  for(var i=0; i<5; i++){\n    // 增加科目分录行\n    addEntryLines() ;\n  }\n  // 刷新行序号\n  app.grid1.getView().refresh();\n}","tagEvents":"'beforeedit' : function(editor,e,eOpts){\n  // 操作类型\n  var op = '{#optype#}' ;\n  // 凭证类型\n  var vtype = '{#vtype#}';\n  \n  // TODO: 设置表格的列可编辑性\n  if(op == 'write_off'){\n    // 凭证冲销时,分录行不可编辑\n    var fd = e.field ;\n  \tif(fd == 'SUMMARY' || fd == 'CCID_FULL_NAME' || fd == 'AMOUNT' || fd == 'EXCHANGE_RATE'\n        || fd == 'CURRENCY_CODE' || fd == 'ENTER_DR' || fd == 'ENTER_CR' || fd == 'ACCOUNT_DR' || fd == 'ACCOUNT_CR'){\n      return false ;\n    }\n    \n  }else if(op == 'add' || op == 'copy' || op == 'modify'){\n    // 当前记录行\n    var r = e.record  ;\n    // 当期那列索引名\n    var fd = e.field ; \n    \n    // 如果CCID为空则不能录入数量、本币借贷方金额、汇率和原币借贷方金额\n    var ccid = r.data.CCID ;\n    if(ccid == undefined || ccid == \"\" || ccid == null){\n      if(fd == 'ENTER_DR' || fd == 'ENTER_CR' || fd == 'ACCOUNT_DR' || fd == 'ACCOUNT_CR' ||　fd == 'AMOUNT' || fd == 'EXCHANGE_RATE' ){\n        return false ;\n      }\n    }\n    \n    // 合计行不能编辑\n    if(r.data.IS_SUM == 'Y'){\n      if(fd == 'SUMMARY' || fd == 'CCID_FULL_NAME' || fd == 'AMOUNT' || fd == 'EXCHANGE_RATE'\n          || fd == 'CURRENCY_CODE' || fd == 'ENTER_DR' || fd == 'ENTER_CR' || fd == 'ACCOUNT_DR' || fd == 'ACCOUNT_CR'){\n        return false ;\n      }\n    }\n    \n    if(vtype == 'foreign'){\n      // 科目本币计量,汇率、原币借方和贷方不可录入\n      var isForegin = r.data.IS_FOREIGN ;\n      if(isForegin == '' || isForegin == null || isForegin == undefined){\n        isForegin = 'N' ;\n      }\n      if((fd == 'ENTER_DR' || fd == 'ENTER_CR' || fd == 'EXCHANGE_RATE') && isForegin == 'N'){\n        return false ;\n      }\n      // 科目外币计量,折后借方和贷方不可录入\n      if((fd == 'ACCOUNT_DR' || fd == 'ACCOUNT_CR') && isForegin == 'Y'){\n        return false ;\n      }\n      // 外币凭证, 原币借方和贷方录入规则\n      var edr = r.data.ENTER_DR ;\n      if(edr == \"\" || edr == null) edr = 0 ;\n      \n      var ecr = r.data.ENTER_CR ;\n      if(ecr == \"\" || ecr == null) ecr = 0 ;\n      \n      if(fd == 'ENTER_DR' && edr == 0 && ecr != 0){\n\t\treturn false ;\n      }\n      if(fd == 'ENTER_CR' && edr !=0 && ecr == 0){\n        return false ;\n      }\n      // 外币凭证, 折后借方和贷方的录入规则\n      var adr = r.data.ACCOUNT_DR ;\n      if(adr == \"\" || adr == null) adr = 0 ;\n      \n      var acr = r.data.ACCOUNT_CR ;\n      if(acr == \"\" || acr == null) acr = 0 ;\n      \n      if(fd == 'ACCOUNT_DR' && adr == 0 && acr != 0){\n\t\treturn false ;\n      }\n      if(fd == 'ACCOUNT_CR' && adr !=0 && acr == 0){\n        return false ;\n      }\n      \n    }else{\n      // 金额和数量凭证, 借方和贷方的录入规则\n      var adr = r.data.ACCOUNT_DR ;\n      if(adr == \"\" || adr == null) adr = 0 ;\n      \n      var acr = r.data.ACCOUNT_CR ;\n      if(acr == \"\" || acr == null) acr = 0 ;\n      \n      var dimId = r.data.DIM_ID ; // 单位ID\n      if(fd == 'ACCOUNT_DR' && adr == 0 && acr != 0){\n        return false ;\n      }\n      if(fd == 'ACCOUNT_CR' && adr !=0 && acr == 0){\n        return false ;\n      }\n      // 判断金额是否可以录入数量(计量单位不为空则可录入)\n      if(vtype == 'amount' && fd == 'AMOUNT' && (dimId == undefined || dimId == \"\" || dimId == null)){\n        return false ;\n      }      \n    }\n    \n  }else{\n    // 扩展使用\n  }\n},\n'cellclick' : function(grid1,td,cellIndex,record,tr,rowIndex,e,eOpts){\n  if(cellIndex == 6){ // 如果为行摘要列\n    // 头摘要\n    var hs = app.v_summary.getValue() ;\n    // 行摘要\n    var ls = record.data.SUMMARY ;\n    // 行摘要初始化\n    if(rowIndex === 0){\n      if(ls === '' || ls === null){\n        record.set('SUMMARY',hs) ;\n      }\n    }else{\n      if(ls === '' || ls === null){\n        var store = grid1.getStore() ;\n        var r = store.getAt(rowIndex-1) ;\n        record.set('SUMMARY',r.data.SUMMARY) ;\n      }\n    }\n  }\n}","beforerender":"// TODO: 根据凭证类型动态显示Grid列信息\nvar vtype = '{#vtype#}' ;\n\nif(vtype == 'normal'){\n  \n}else if(vtype == 'amount'){\n  app.v_line_amount.show() ;\n  app.v_dim_name.show() ;\n  \n}else if(vtype == 'foreign'){\n  app.v_exchange_rate.show() ;\n  app.v_cny_name.show() ;\n  app.v_enter_dr.show() ;\n  app.v_enter_cr.show();\n  \n}else{\n  \n}"},"children":[{"configs":{"autoLoad":"false","itemId":"store","url":"m?xwl=xc/gl/journal/data-db/new-voucher-data/init-v-lines"},"events":{"load":"// TODO: 凭证模板（1-金额凭证，2-数量凭证，3-外币凭证）\nvar vt = '{#vtype#}' ;\n\n// TODO: 操作模式（add-新增，copy-复制，write_off-冲销，modify-修改）\nvar op = '{#optype#}' ;\n\n// TODO: 初始化5行空分录\nvar len = 5 - records.length ;\n// 增加合计行\naddTotalLine();\nfor(var i=0; i<len; i++){\n  // 增加科目分录行\n  addEntryLines('auto') ;\n}\n// 刷新行序号\napp.grid1.getView().refresh() ;\n\n// 取得合计行\nvar i = store.find('IS_SUM','Y');\nvar r = store.getAt(i) ;\n\n// 设置原币借方和贷方合计数\nvar t_edr = 0;\nvar t_ecr = 0 ;\nWb.each(records, function(rec){\n  var edr = rec.data.ENTER_DR ;\n  if(edr === \"\" || edr === null || edr === undefined){edr = 0 ;}\n  var ecr = rec.data.ENTER_CR ;\n  if(ecr === \"\" || ecr === null || ecr === undefined){ecr = 0 ;}\n  t_edr += edr ;\n  t_ecr += ecr ;\n}) ;\nif(op == 'write_off'){\n  r.set('ENTER_DR', accMul(t_edr,-1)) ;\n  r.set('ENTER_CR', accMul(t_ecr,-1)) ;\n}else{\n  r.set('ENTER_DR', t_edr) ;\n  r.set('ENTER_CR', t_ecr) ;\n}\n\n// 重新计算折后借方和贷方金额\napp.sumLines.fireEvent('click') ;\n\n// 设置合计行折后借方和贷方合计数 \nvar t_dr = app.v_total_dr.getValue() ;\nvar t_cr = app.v_total_cr.getValue() ;\n\nvar tt = 0 ;\nif(op == 'write_off'){\n  r.set('ACCOUNT_DR', accMul(t_dr,-1)) ; \n  r.set('ACCOUNT_CR', accMul(t_cr,-1)) ;\n  tt = accMul(t_dr,-1) ;\n\n}else{\n  r.set('ACCOUNT_DR', t_dr) ; \n  r.set('ACCOUNT_CR', t_cr) ;\n  tt = t_dr ;\n}\n\n// TODO: 金额大写转换\nif(tt !== 0){\n  var cstr = amtTransChinese(tt) ;\n  r.set('CCID_FULL_NAME',cstr) ;  \n}\nstore.commitChanges();\n","success":"// TODO: 获取操作类型\nvar op = '{#optype#}' ;\n\n// 执行凭证冲销处理时,将数量设置为负数\nif(op == 'write_off'){ \n  Ext.each(records,function(a){\n    var _amount = a.data.AMOUNT ;\n    if(Number(_amount)!==0){\n      r.set('AMOUNT',Number(_amount)*(-1)) ;\n    }\n    var _enterDR = a.data.ENTER_DR ;\n    if(Number(_enterDR)!==0){\n      a.data.ENTER_DR = Number(_enterDR)*(-1) ;\n    }\n    var _enterCR = a.data.ENTER_CR ;\n    if(Number(_enterCR)!==0){\n      a.data.ENTER_CR = Number(_enterCR)*(-1) ;\n    }\n    var _accountDR = a.data.ACCOUNT_DR ;\n    if(Number(_accountDR)!==0){\n      a.data.ACCOUNT_DR = Number(_accountDR)*(-1) ;\n    }\n    \n    var _accountCR = a.data.ACCOUNT_CR ;\n    if(Number(_accountCR)!==0){\n      a.data.ACCOUNT_CR = Number(_accountCR)*(-1) ;\n    }\n    \n    var _summary = a.data.SUMMARY ;\n    a.data.SUMMARY = '冲销：'+ _summary ;\n    \n  }) ;\n}"},"children":[],"expanded":true,"type":"store"},{"configs":{"border":"false","itemId":"tbar"},"events":{"afterrender":"var op = '{#optype#}' ; \nif(op == 'write_off'){\n  app.addLine.disable() ;\n  app.delLine.disable(); \n}else{\n  app.addLine.enable() ;\n  app.delLine.enable() ;\n}"},"children":[{"configs":{"text":"{#addLine#}","itemId":"addLine","iconCls":"file_add_icon"},"events":{"click":"// Wb.addEdit(app.grid1);\nvar ledgerId = app.ledger.getValue() ;\nif(Wb.isEmpty(ledgerId)){\n  Wb.info(\"请选择账簿!\") ;\n  return false ;\n}else{\n  // 增加科目分录行\n  addEntryLines('nonauto') ;\n  // 刷新行序号\n  app.grid1.getView().refresh();\n}"},"children":[],"expanded":true,"type":"button"},{"configs":{"text":"{#delLine#}","itemId":"delLine","iconCls":"file_delete_icon"},"events":{"click":"// TODO: 当前选中记录行\nvar r = app.grid1.getSelection()[0] ;\nvar dr = r.data.ACCOUNT_DR ;\nvar cr = r.data.ACCOUNT_CR ;\nvar edr = r.data.ENTER_DR ;\nvar ecr = r.data.ENTER_CR ;\nif(dr === \"\" || dr === null){dr = 0 ;}\nif(cr === \"\" || cr === null){cr = 0 ;}\nif(edr === \"\" || edr === null){edr = 0 ;}\nif(ecr === \"\" || ecr === null){ecr = 0 ;}\napp.grid1.store.remove(r) ;\n// 刷新行序号\napp.grid1.getView().refresh() ;\n\n// TODO: 重新计算当前借贷方合计数\nvar store = app.grid1.getStore() ;\nvar i = store.find('IS_SUM','Y');\nvar rr = store.getAt(i) ;\n\nvar t_dr = rr.data.ACCOUNT_DR ;\nvar t_cr = rr.data.ACCOUNT_CR ;\nvar t_edr = rr.data.ENTER_DR ;\nvar t_ecr = rr.data.ENTER_CR ;\nif(t_dr === \"\" || t_dr === null){t_dr = 0 ;}\nif(t_cr === \"\" || t_cr === null){t_cr = 0 ;}\nif(t_edr === \"\" || t_edr === null){t_edr = 0 ;}\nif(t_ecr === \"\" || t_ecr === null){t_ecr = 0 ;}\n\nvar newAccDR = t_dr-dr ;\n\nrr.set('ENTER_DR',t_edr-dr) ;\nrr.set('ENTER_CR',t_ecr-cr) ;\nrr.set('ACCOUNT_DR',newAccDR) ;\nrr.set('ACCOUNT_CR',t_cr-cr) ;\n\n// TODO: 金额大写转换\nif(newAccDR !== 0){\n  var cstr = amtTransChinese(newAccDR) ;\n  rr.set('CCID_FULL_NAME',cstr) ;\n}\n"},"children":[],"expanded":true,"type":"button"}],"expanded":true,"type":"toolbar"},{"configs":{"itemId":"columns"},"children":[{"configs":{"text":"序号","hidden":"false","align":"center","xtype":"rownumberer","width":"50","dataIndex":"ORDERBY","titleAlign":"center","itemId":"rownum"},"children":[],"expanded":true,"type":"column"},{"configs":{"text":"凭证行ID","hidden":"true","dataIndex":"LINE_ID","itemId":"v_line_id"},"children":[],"expanded":true,"type":"column"},{"configs":{"text":"现金流量项目ID","hidden":"true","dataIndex":"CA_ID","itemId":"v_ca_id"},"children":[],"expanded":true,"type":"column"},{"configs":{"text":"单位ID","hidden":"true","dataIndex":"DIM_ID","itemId":"v_dim_id"},"children":[],"expanded":true,"type":"column"},{"configs":{"text":"科目组合ID","hidden":"true","dataIndex":"CCID","itemId":"v_ccid"},"children":[],"expanded":true,"type":"column"},{"configs":{"text":"是否银行或现金科目","hidden":"true","dataIndex":"IS_BC_ACC","itemId":"v_is_bc_acc"},"children":[],"expanded":true,"type":"column"},{"configs":{"text":"{#v_line_summary#}","sortable":"false","width":"180","align":"left","dataIndex":"SUMMARY","titleAlign":"center","itemId":"v_line_summary","renderer":"metaData.style = 'overflow:auto;padding: 3px 6px;text-overflow: ellipsis;white-space: nowrap;white-space:normal;line-height:45px;';   \nreturn value;"},"children":[{"configs":{"itemId":"editor"},"children":[],"expanded":true,"type":"text"}],"expanded":true,"type":"column"},{"configs":{"text":"{#v_line_account#}","sortable":"false","width":"250","align":"left","dataIndex":"CCID_FULL_NAME","titleAlign":"center","itemId":"v_line_account","renderer":"metaData.style = 'overflow:auto;padding: 3px 6px;text-overflow: ellipsis;white-space: nowrap;white-space:normal;line-height:45px;';   \nreturn value;"},"children":[{"configs":{"displayField":"ACC_NAME","triggerCls":"x-form-search-trigger","valueField":"ACC_ID","itemId":"editor","onTriggerClick":"  // 账簿\n  var ledgerId = app.ledger.getValue() ;\n  if(ledgerId === \"\" ||ledgerId === null || ledgerId === undefined){\n    Wb.info('请选择账簿!') ;\n    return false ;\n  }\n  \n  // 会计日期\n  var accDate = app.accountDate.getValue() ;\n  if(accDate === \"\" ||accDate === null || accDate === undefined){\n    Wb.info('请选择会计日期!') ;\n    return false ;\n  }else{\n    // 账簿会计期\n    var accPeriod = app.ldPeriod.getValue() ;\n    if(accPeriod === \"\" ||accPeriod === null || accPeriod === undefined){\n      Wb.info('会计期不能为空!') ;\n      return false ;\n    }\n  }\n  \n  // TODO: 当前选中行\n  var r = app.grid1.getSelection()[0] ; \n  // 预算信息\n  var bgJson = {\n    'bgItemId' : r.data.BG_ITEM_ID ,\n    'bgItemName' : r.data.BG_ITEM_NAME ,\n    'projectId' : r.data.PROJECT_ID ,\n    'projects' : r.data.PROJECT_NAME ,\n    'deptId' : r.data.DEPT_ID ,\n    'depts' : r.data.DEPT_NAME \n  } ;\n\n  // TODO: 显示科目选择窗口\n  Wb.run({\n    url:'m?xwl=xc/gl/journal/v-windows/handler-ccid-win',\n    params : {\n      'ledgerId' : app.ledger.getValue(),\n      'periodCode' : app.ldPeriod.getValue() ,\n      'vtype'    : '{#vtype#}',\n      'srctype'  : '{#srctype#}'\n    },          \n    success:function(appObj){\n      appObj.initWindow({\n        accName : r.data.CCID_FULL_NAME,\n        ledgerId : app.ledger.getValue(),\n        periodCode : app.ldPeriod.getValue() ,\n        caId : r.data.CA_ID,\t\t\t// 现金流量项信息\n        ccid : r.data.CCID,\n        bgInfo : Wb.encode(bgJson) , // 预算信息\n        groupId : 'ALL',\n        handlerCCID : function(returnObj){\n          // TODO: 处理CCID信息\n          var rObj = Wb.decode(returnObj) ;\n          r.set('CCID', rObj.acc_ccid) ;    \n          r.set('CCID_FULL_NAME', rObj.acc_ccid_name);\n          r.set('DIM_ID', rObj.dim_id) ;\n          r.set('DIM_NAME', rObj.dim_name) ;\n          r.set('IS_FOREIGN', rObj.f_cny) ;\n          r.set('CURRENCY_CODE',rObj.cny_code) ;\n          r.set('CURRENCY_NAME',rObj.cny_name) ;\n          r.set('CA_ID',rObj.ca_id) ;   \n          r.set('CA_NAME',rObj.ca_name) ;\n          r.set('IS_BC_ACC',rObj.is_sign);\n          r.set('BG_ITEM_ID',rObj.bgItemId);\n          r.set('DEPT_ID',rObj.deptId);\n          r.set('PROJECT_ID',rObj.projectId);\n          \n          // 禁用账簿\n          app.ledger.setReadOnly(true) ;\n        }\n      });\n    }  \n  }) ;   "},"events":{"beforequery":"var combo = e.combo;\nif(!e.forceAll){\n  var value = e.query;\n  combo.store.filterBy(function(record,id){\n    var text = record.get(combo.displayField);\n    return (text.indexOf(value)!=-1);\n  });\n  combo.expand();\n  return false;\n}","specialkey":"// TODO: 按回车键执行借方和贷方金额切换\nif (e.getKey() == e.ENTER) {\n  // 账簿\n  var ledgerId = app.ledger.getValue() ;\n  if(ledgerId === \"\" ||ledgerId === null || ledgerId === undefined){\n    Wb.info('请选择账簿!') ;\n    return false ;\n  }\n  \n  // 会计日期\n  var accDate = app.accountDate.getValue() ;\n  if(accDate === \"\" ||accDate === null || accDate === undefined){\n    Wb.info('请选择会计日期!') ;\n    return false ;\n  }else{\n    // 账簿会计期\n    var accPeriod = app.ldPeriod.getValue() ;\n    if(accPeriod === \"\" ||accPeriod === null || accPeriod === undefined){\n      Wb.info('会计期不能为空!') ;\n      return false ;\n    }\n  }\n  \n  // TODO: 当前选中\n  var r = app.grid1.getSelection()[0] ; \n  // 预算信息\n  var bgJson = {\n    'bgItemId' : r.data.BG_ITEM_ID ,\n    'bgItemName' : r.data.BG_ITEM_NAME ,\n    'projectId' : r.data.PROJECT_ID ,\n    'projects' : r.data.PROJECT_NAME ,\n    'deptId' : r.data.DEPT_ID ,\n    'depts' : r.data.DEPT_NAME \n  } ;\n  \n  // TODO: 显示科目选择窗口\n  Wb.run({\n    url:'m?xwl=xc/gl/journal/v-windows/handler-ccid-win',\n    params : {\n      'ledgerId' : app.ledger.getValue(),\n      'periodCode' : app.ldPeriod.getValue() ,\n      'vtype'    : '{#vtype#}',\n      'srctype'  : '{#srctype#}'\n    },          \n    success:function(appObj){\n      appObj.initWindow({\n        accName : combo.getValue(),\n        ledgerId : app.ledger.getValue(),\n        periodCode : app.ldPeriod.getValue() ,\n        caId : r.data.CA_ID,\t\t// 现金流量项信息\n        ccid : r.data.CCID,\n        bgInfo : Wb.encode(bgJson) , // 预算信息\n        groupId : 'ALL',\n        handlerCCID : function(returnObj){\n          // TODO: 处理CCID信息\n          var rObj = Wb.decode(returnObj) ;\n          r.set('CCID', rObj.acc_ccid) ;    \n          r.set('CCID_FULL_NAME', rObj.acc_ccid_name);\n          r.set('DIM_ID', rObj.dim_id) ;\n          r.set('DIM_NAME', rObj.dim_name) ;\n          r.set('IS_FOREIGN', rObj.f_cny) ;\n          r.set('CURRENCY_CODE',rObj.cny_code) ;\n          r.set('CURRENCY_NAME',rObj.cny_name) ;\n          r.set('CA_ID',rObj.ca_id) ;   \n          r.set('CA_NAME',rObj.ca_name) ;\n          r.set('IS_BC_ACC',rObj.is_sign);\n          r.set('BG_ITEM_ID',rObj.bgItemId);\n          r.set('DEPT_ID',rObj.deptId);\n          r.set('PROJECT_ID',rObj.projectId);\n          \n          // 禁用账簿\n          app.ledger.setReadOnly(true) ;\n        }\n      });\n    }  \n  }) ;   \n}"},"children":[],"expanded":true,"type":"combo"}],"expanded":true,"type":"column"},{"configs":{"text":"{#v_ca_name#}","sortable":"false","width":"200","dataIndex":"CA_NAME","titleAlign":"center","itemId":"v_ca_name","renderer":"metaData.style = 'overflow:auto;padding: 3px 6px;text-overflow: ellipsis;white-space: nowrap;white-space:normal;line-height:45px;';   \nreturn value;"},"children":[],"expanded":false,"type":"column"},{"configs":{"text":"{#v_line_amount#}","hidden":"true","sortable":"false","xtype":"numbercolumn","align":"right","width":"100","dataIndex":"AMOUNT","titleAlign":"center","format":"0,000.0000","itemId":"v_line_amount","renderer":"metaData.style = 'overflow:auto;padding: 3px 6px;text-overflow: ellipsis;white-space: nowrap;white-space:normal;line-height:45px;';   \nif(value > 0){\n  return Wb.format(value,'0,000.0000') ;\n}else if(value < 0){\n  return '<font color=red>'+Wb.format(value,'0,000.0000')+'<\/font>' ;\n}else{\n  return '' ;\n}\n"},"children":[{"configs":{"decimalPrecision":"4","itemId":"editor"},"children":[],"expanded":true,"type":"number"}],"expanded":false,"type":"column"},{"configs":{"text":"{#v_dim_name#}","hidden":"true","sortable":"false","align":"center","dataIndex":"DIM_NAME","titleAlign":"center","itemId":"v_dim_name"},"children":[],"expanded":true,"type":"column"},{"configs":{"text":"{#v_exchange_rate#}","hidden":"true","xtype":"numbercolumn","sortable":"false","align":"right","dataIndex":"EXCHANGE_RATE","titleAlign":"center","format":"0,000.0000","itemId":"v_exchange_rate","renderer":"metaData.style = 'overflow:auto;padding: 3px 6px;text-overflow: ellipsis;white-space: nowrap;white-space:normal;line-height:45px;';   \nif(value < 0){\n  return '<font color=red>'+Wb.format(value,'0,000.0000')+'<\/font>' ;\n}else{\n  return Wb.format(value,'0,000.0000') ;\n}"},"children":[{"configs":{"decimalPrecision":"4","itemId":"editor"},"events":{"blur":"// TODO: 计算折后金额\ncalAccoutDCR(number.getValue(),'1') ;"},"children":[],"expanded":true,"type":"number"}],"expanded":false,"type":"column"},{"configs":{"text":"是否外币","hidden":"true","sortable":"false","dataIndex":"IS_FOREIGN","itemId":"v_is_foreign"},"children":[],"expanded":true,"type":"column"},{"configs":{"text":"币种编码","hidden":"true","dataIndex":"CURRENCY_CODE","titleAlign":"center","itemId":"v_line_currency"},"children":[],"expanded":true,"type":"column"},{"configs":{"text":"{#v_cny_name#}","hidden":"true","sortable":"false","align":"center","dataIndex":"CURRENCY_NAME","titleAlign":"center","itemId":"v_cny_name"},"children":[],"expanded":true,"type":"column"},{"configs":{"text":"{#v_enter_dr#}","hidden":"true","sortable":"false","xtype":"numbercolumn","align":"right","dataIndex":"ENTER_DR","titleAlign":"center","format":"0,000.00","itemId":"v_enter_dr","renderer":"metaData.style = 'overflow:auto;padding: 3px 6px;text-overflow: ellipsis;white-space: nowrap;white-space:normal;line-height:45px;';   \nif(value > 0){\n  return Wb.format(value,'0,000.00') ;\n}else if(value < 0){\n  return '<font color=red>'+Wb.format(value,'0,000.00')+'<\/font>' ;\n}else{\n  return '' ;\n}"},"children":[{"configs":{"tagConfigs":"{\n  enableKeyEvents : true\n}","decimalPrecision":"2","itemId":"editor"},"events":{"focus":"// TODO: 当前借贷方合计数\nvar store = app.grid1.getStore() ;\nvar i = store.find('IS_SUM','Y');\nvar r = store.getAt(i) ;\nvar dr = r.data.ENTER_DR ;\nvar cr = r.data.ENTER_CR ;\nif(dr === \"\" || dr === null){\n  dr = 0 ;\n}\nif(cr === \"\" || cr === null){\n  cr = 0 ;\n}\n\n// TODO: 当前分录借方数\nvar rr = app.grid1.getSelection()[0] ;\nvar val = number.getValue() ;\nif(val === \"\" || val === null || val === undefined){\n  val = 0 ;\n}\nif(dr < cr && val === 0){\n  var tmp = cr - dr ;\n  number.setValue(tmp) ;\n}","blur":"// TODO: 计算折后金额\ncalAccoutDCR(number.getValue(),'2') ;"},"children":[],"expanded":true,"type":"number"}],"expanded":false,"type":"column"},{"configs":{"text":"{#v_enter_cr#}","hidden":"true","sortable":"false","xtype":"numbercolumn","align":"right","dataIndex":"ENTER_CR","titleAlign":"center","format":"0,000.00","itemId":"v_enter_cr","renderer":"metaData.style = 'overflow:auto;padding: 3px 6px;text-overflow: ellipsis;white-space: nowrap;white-space:normal;line-height:45px;';   \nif(value > 0){\n  return Wb.format(value,'0,000.00') ;\n}else if(value < 0){\n  return '<font color=red>'+Wb.format(value,'0,000.00')+'<\/font>' ;\n}else{\n  return '' ;\n}"},"children":[{"configs":{"decimalPrecision":"2","itemId":"editor"},"events":{"focus":"// TODO: 当前借贷方合计数\nvar store = app.grid1.getStore() ;\nvar i = store.find('IS_SUM','Y');\nvar r = store.getAt(i) ;\nvar dr = r.data.ENTER_DR ;\nvar cr = r.data.ENTER_CR ;\nif(dr === \"\" || dr === null){\n  dr = 0 ;\n}\nif(cr === \"\" || cr === null){\n  cr = 0 ;\n}\n\n// TODO: 当前分录借方数\nvar rr = app.grid1.getSelection()[0] ;\nvar val = number.getValue() ;\nif(val === \"\" || val === null || val === undefined){\n  val = 0 ;\n}\nif(cr < dr && val === 0){\n  var tmp = dr - cr ;\n  number.setValue(tmp) ;\n}","blur":"// TODO: 计算折后金额\ncalAccoutDCR(number.getValue(),'3') ;"},"children":[],"expanded":true,"type":"number"}],"expanded":false,"type":"column"},{"configs":{"text":"{#v_account_dr#}","sortable":"false","xtype":"numbercolumn","align":"right","dataIndex":"ACCOUNT_DR","titleAlign":"center","format":"0,000.00","itemId":"v_account_dr","renderer":"metaData.style = 'overflow:auto;padding: 3px 6px;text-overflow: ellipsis;white-space: nowrap;white-space:normal;line-height:45px;';   \nif(value > 0){\n  return Wb.format(value,'0,000.00') ;\n}else if(value < 0){\n  return '<font color=red>'+Wb.format(value,'0,000.00')+'<\/font>' ;\n}else{\n  return '' ;\n}"},"children":[{"configs":{"decimalPrecision":"2","itemId":"editor"},"events":{"focus":"// TODO: 当前借贷方合计数\nvar store = app.grid1.getStore() ;\nvar i = store.find('IS_SUM','Y');\nvar r = store.getAt(i) ;\nvar dr = r.data.ACCOUNT_DR ;\nvar cr = r.data.ACCOUNT_CR ;\nif(dr === \"\" || dr === null){\n  dr = 0 ;\n}\nif(cr === \"\" || cr === null){\n  cr = 0 ;\n}\n\n// TODO: 当前分录借方数\nvar rr = app.grid1.getSelection()[0] ;\nvar val = number.getValue() ;\nif(val === \"\" || val === null || val === undefined){\n  val = 0 ;\n}\nif(dr < cr && val === 0){\n  var tmp = cr - dr ;\n  number.setValue(tmp) ;\n}","blur":"// TODO: 当前分录借方数\nvar rr = app.grid1.getSelection()[0] ;\nvar oldValue = rr.data.ACCOUNT_DR ;\nif(oldValue === \"\" ||　oldValue === null){\n  oldValue = 0 ;\n}\n// TODO: 当前借方合计数\nvar store = app.grid1.getStore() ;\nvar i = store.find('IS_SUM','Y');\nvar r = store.getAt(i) ;\nvar dr = r.data.ACCOUNT_DR ;\nvar cr = r.data.ACCOUNT_CR ;\nif(dr === \"\" || dr === null){dr = 0 ;}\nif(cr === \"\" || cr === null){cr = 0 ;}\n\n// TODO: 计算新借方合计数\nvar newValue = dr + number.getValue() - oldValue ; \nr.set('ACCOUNT_DR', newValue) ; \n\n// 大写转换\nif(newValue == cr && newValue !== 0){\n  var newVal = amtTransChinese(newValue) ;\n  r.set('CCID_FULL_NAME',newVal) ; \n}else{\n  r.set('CCID_FULL_NAME','') ; \n}\nstore.commitChanges() ;"},"children":[],"expanded":true,"type":"number"}],"expanded":true,"type":"column"},{"configs":{"text":"{#v_account_cr#}","sortable":"false","xtype":"numbercolumn","align":"right","dataIndex":"ACCOUNT_CR","titleAlign":"center","format":"0,000.00","itemId":"v_account_cr","renderer":"metaData.style = 'overflow:auto;padding: 3px 6px;text-overflow: ellipsis;white-space: nowrap;white-space:normal;line-height:45px;';   \nif(value > 0){\n  return Wb.format(value,'0,000.00') ;\n}else if(value < 0){\n  return '<font color=red>'+Wb.format(value,'0,000.00')+'<\/font>' ;\n}else{\n  return '' ;\n}"},"children":[{"configs":{"decimalPrecision":"2","itemId":"editor"},"events":{"focus":"// TODO: 当前借贷方合计数\nvar store = app.grid1.getStore() ;\nvar i = store.find('IS_SUM','Y');\nvar r = store.getAt(i) ;\nvar dr = r.data.ACCOUNT_DR ;\nvar cr = r.data.ACCOUNT_CR ;\nif(dr === \"\" || dr === null){\n  dr = 0 ;\n}\nif(cr === \"\" || cr === null){\n  cr = 0 ;\n}\n\n// TODO: 当前分录借方数\nvar rr = app.grid1.getSelection()[0] ;\nvar val = number.getValue() ;\nif(val === \"\" || val === null || val === undefined){\n  val = 0 ;\n}\nif(cr < dr && val === 0){\n  var tmp = dr - cr ;\n  number.setValue(tmp) ;\n}","blur":"// TODO: 当前分录贷方数\nvar rr = app.grid1.getSelection()[0] ;\nvar oldValue = rr.data.ACCOUNT_CR ;\nif(oldValue === \"\" ||　oldValue === null){\n  oldValue = 0 ;\n}\n// TODO: 当前贷方合计数\nvar store = app.grid1.getStore() ;\nvar i = store.find('IS_SUM','Y');\nvar r = store.getAt(i) ;\nvar r = store.getAt(i) ;\nvar dr = r.data.ACCOUNT_DR ;\nvar cr = r.data.ACCOUNT_CR ;\nif(dr === \"\" || dr === null){dr = 0 ;}\nif(cr === \"\" || cr === null){cr = 0 ;}\n\n// TODO: 计算新贷方合计数\nvar newValue = cr + number.getValue() - oldValue ; \nr.set('ACCOUNT_CR', newValue) ; \n\n// 大写转换\nif(dr == newValue && newValue !== 0){\n  var newVal = amtTransChinese(newValue) ;\n  r.set('CCID_FULL_NAME',newVal) ; \n}else{\n  r.set('CCID_FULL_NAME','') ; \n}\nstore.commitChanges() ;"},"children":[],"expanded":true,"type":"number"}],"expanded":false,"type":"column"},{"configs":{"text":"是否合计行","hidden":"true","dataIndex":"IS_SUM","titleAlign":"center","itemId":"v_is_sum"},"children":[],"expanded":true,"type":"column"},{"configs":{"text":"预算项目ID","hidden":"true","dataIndex":"BG_ITEM_ID","itemId":"v_bg_item_id"},"children":[],"expanded":false,"type":"column"},{"configs":{"text":"成本中心ID","hidden":"true","dataIndex":"DEPT_ID","itemId":"v_dept_id"},"children":[],"expanded":false,"type":"column"},{"configs":{"text":"项目ID","hidden":"true","dataIndex":"PROJECT_ID","itemId":"v_project_id"},"children":[],"expanded":false,"type":"column"}],"expanded":true,"type":"array"},{"configs":{"border":"false","itemId":"bbar"},"events":{"afterrender":"// TODO: 赋值处理\nvar fdata = '{#formJSON#}' ;\nWb.setValue(app.bbar,Wb.decode(fdata)) ;"},"children":[{"configs":{"layout":"fit","columnWidth":".25","border":"false","itemId":"panel1"},"children":[{"configs":{"hidden":"true","itemId":"v_created_by","fieldLabel":"制单人ID"},"children":[],"expanded":true,"type":"text"},{"configs":{"labelWidth":"80","readOnly":"true","labelAlign":"right","itemId":"v_created_name","fieldLabel":"{#v_created_name#}"},"children":[],"expanded":true,"type":"text"}],"expanded":true,"type":"panel"},{"configs":{"layout":"fit","columnWidth":".25","border":"false","itemId":"panel2"},"children":[{"configs":{"hidden":"true","itemId":"v_verifier_id","fieldLabel":"审核人ID"},"children":[],"expanded":true,"type":"text"},{"configs":{"labelWidth":"80","readOnly":"true","labelAlign":"right","itemId":"v_verifier","fieldLabel":"{#v_verifier#}"},"children":[],"expanded":true,"type":"text"}],"expanded":true,"type":"panel"},{"configs":{"layout":"fit","columnWidth":".25","border":"false","itemId":"panel3"},"children":[{"configs":{"hidden":"true","itemId":"v_signatory_id","fieldLabel":"出纳ID"},"children":[],"expanded":true,"type":"text"},{"configs":{"labelWidth":"80","readOnly":"true","labelAlign":"right","itemId":"v_signatory","fieldLabel":"{#v_signatory#}"},"children":[],"expanded":true,"type":"text"}],"expanded":true,"type":"panel"},{"configs":{"layout":"fit","columnWidth":".25","border":"false","itemId":"panel4"},"children":[{"configs":{"hidden":"true","itemId":"v_bookkeeper_id","fieldLabel":"记账人ID"},"children":[],"expanded":true,"type":"text"},{"configs":{"labelWidth":"80","readOnly":"true","labelAlign":"right","itemId":"v_bookkeeper","fieldLabel":"{#v_bookkeeper#}"},"children":[],"expanded":true,"type":"text"}],"expanded":true,"type":"panel"}],"expanded":true,"type":"toolbar"}],"expanded":true,"type":"grid"}],"expanded":true,"type":"panel"}],"expanded":true,"type":"window"}],"expanded":true,"type":"module"}],"pageLink":"","iconCls":"window_icon"}