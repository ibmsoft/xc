{"inframe":false,"title":"账簿科目批量修改","hidden":false,"roles":{"default":1},"children":[{"configs":{"loginRequired":"false","serverScript":"var out = java.lang.System.out;\n\nvar infoArray = request.getParameter(\"infoArray\");\nvar modifyArray = request.getParameter(\"modifyArray\");\nvar ACC_SEG_UNIONS = request.getParameter(\"ACC_SEG_UNIONS\");\nvar ldArray = Wb.decode(infoArray);\nvar segArray = Wb.decode(modifyArray);\n\n// TODO: 判断科目是否已经记账,如果已记账则不能修改辅助段信息\nvar isUpdatedAss = request.getParameter(\"UPDATE_ASS\") ;\nif(isUpdatedAss == 1){\n  var ledgerId = request.getParameter(\"ledgerId\") ;\n  var accStr = request.getParameter(\"accStr\") ;\n  \n  // 判断是否存在未提交凭证信息\n  var vsql = \" select 1 from xc_gl_v_lines xl,xc_gl_ccid gc , xc_gl_v_heads xh \" ;\n  vsql += \" where xl.CCID = gc.CCID and xl.V_HEAD_ID = xh.V_HEAD_ID and xh.LEDGER_ID = gc.LEDGER_ID \" ;\n  vsql += \" and xh.LEDGER_ID = '\" + ledgerId + \"'\" ;\n  vsql += \" and xh.V_STATUS = '1' \" ;\n  vsql += \" and gc.ACC_ID in (\" + accStr + \")\" ;\n  app.run(vsql,{errorText:'所选科目存在未提交凭证,不能修改辅助核算段'})  ;\n  \n  // 科目余额借贷是否平衡\n  var dbType = com.xzsoft.xip.platform.util.PlatformUtil.getDbType() ; // 数据库类型：mysql / oracle\n  // 定义SQL\n  var sql = \"\" ;\n  if(dbType == \"mysql\"){\n    sql = \" SELECT 1 FROM ( \" ;\n    sql += \" select (case IFNULL((SUM(IFNULL(xb.T_PJTD_DR,0))-SUM(IFNULL(xb.T_PJTD_CR,0))),0) when 0 then 0 else 1 end ) as total \" ;\n    sql += \" from xc_gl_balance xb ,xc_gl_ccid gc \" ;\n    sql += \" where xb.CCID = gc.CCID \" ;\n    sql += \" and gc.ACC_ID in (\" + accStr + \") \" ;\n    sql += \" and xb.LEDGER_ID = '\"+ ledgerId + \"'\" ;\n    sql += \" and xb.PERIOD_CODE = (select IFNULL(max(PERIOD_CODE),'1900-01') from xc_gl_ld_period xp \" ;\n    sql += \" where xp.LEDGER_ID = '\" + ledgerId + \"') \" ;\n    sql += \" ) t where total = 1 \" ;\n    \n  }else if(dbType == \"oracle\"){\n    sql = \" SELECT 1 FROM ( \" ;\n    sql += \" select (case nvl((SUM(nvl(xb.T_PJTD_DR,0))-SUM(nvl(xb.T_PJTD_CR,0))),0) when 0 then 0 else 1 end) as total \" ;\n    sql += \" from xc_gl_balance xb ,xc_gl_ccid gc \" ;\n    sql += \" where xb.CCID = gc.CCID \" ;\n    sql += \" and gc.ACC_ID in (\" + accStr + \") \" ;\n    sql += \" and xb.LEDGER_ID = '\"+ ledgerId + \"'\" ;\n    sql += \" and xb.PERIOD_CODE = (select nvl(max(PERIOD_CODE),'1900-01') from xc_gl_ld_period xp \" ;\n    sql += \" where xp.LEDGER_ID = '\" + ledgerId + \"') \" ;\n    sql += \" ) t where total = 1 \" ;\n    \n  }else{\n    sql = \"select 1 from dual \" ;\n  }\n  app.run(sql,{errorText:'所选科目余额借贷不平衡,不能修改辅助核算段'})  ;\n}\n\nvar ldAccSegArray = [] ;\nfor(var i = 0;i < ldArray.length;i++){\n\tldArray[i].ACC_SEG_UNION = ACC_SEG_UNIONS;\n    for(var j = 0;j < segArray.length;j++){\n        segArray[j].LD_ACC_ID = ldArray[i].LD_ACC_ID;\n        var accJson ={} ;\n        accJson.LD_ACC_ID = ldArray[i].LD_ACC_ID ;\n        accJson.LD_SEG_ID = segArray[j].LD_SEG_ID ;\n        accJson.IS_ENABLED = segArray[j].IS_ENABLED ;\n        ldAccSegArray.push(accJson) ;\n    }\n}\nvar newLdArr = Wb.encode(ldArray);\nvar newSegArr = Wb.encode(ldAccSegArray);\nrequest.setAttribute(\"batLdArray\",newLdArr);\nrequest.setAttribute(\"batSegArray\",newSegArr);","itemId":"module"},"children":[{"configs":{"oracle":"UPDATE xc_gl_ld_accounts \nSET\n    START_DATE = decode({?START_DATE_CHECKS?},'0',{?STARTDATE?},START_DATE),\n\tEND_DATE = decode({?END_DATE_CHECK?},'0',{?ENDDATE?},END_DATE),\n\tDIM_ID = decode({?IS_UPDATE_DIM?},'0',{?DIM?},DIM_ID),\n\tIS_AMOUNT = decode({?IS_UPDATE_DIM?},'0',{?AMOUNT?},IS_AMOUNT),\n\tDEFAULT_CURRENCY = decode({?IS_UPDATE_FOREGIN?},'0',{?CURRENCY?},DEFAULT_CURRENCY),\n\tIS_FOREGIN_CNY = decode({?IS_UPDATE_FOREGIN?},'0',{?FOREGIN_CNY?},IS_FOREGIN_CNY),\n    ACC_SEG_UNION = decode({?UPDATE_ASS?},'0',{?ACC_SEG_UNION?},ACC_SEG_UNION),\n    SEG_CODE_UNION = decode({?UPDATE_ASS?}<>'0',{?ACC_CODE_UNION?},SEG_CODE_UNION),\n    LAST_UPDATE_DATE={?timestamp.sys.date?},\n    LAST_UPDATED_BY={?XIP.userId?}\nWHERE LD_ACC_ID = {?LD_ACC_ID?}","itemId":"ld_accountsEdit","mysql":"UPDATE xc_gl_ld_accounts \nSET\n    START_DATE = IF({?START_DATE_CHECKS?}<>'0',{?STARTDATE?},START_DATE),\n\tEND_DATE = IF({?END_DATE_CHECK?}<>'0',{?ENDDATE?},END_DATE),\n\tDIM_ID = IF({?IS_UPDATE_DIM?}<>'0',{?DIM?},DIM_ID),\n\tIS_AMOUNT = IF({?IS_UPDATE_DIM?}<>'0',{?AMOUNT?},IS_AMOUNT),\n\tDEFAULT_CURRENCY = IF({?IS_UPDATE_FOREGIN?}<>'0',{?CURRENCY?},DEFAULT_CURRENCY),\n\tIS_FOREGIN_CNY = IF({?IS_UPDATE_FOREGIN?}<>'0',{?FOREGIN_CNY?},IS_FOREGIN_CNY),\n    BG_ITEM_ID = IF({?IS_UPDATE_ITEMS?}<>'0',{?BG_ITEM?},BG_ITEM_ID),\n    ACC_SEG_UNION = IF({?UPDATE_ASS?}<>'0',{?ACC_SEG_UNION?},ACC_SEG_UNION),\n    SEG_CODE_UNION = IF({?UPDATE_ASS?}<>'0',{?ACC_CODE_UNION?},SEG_CODE_UNION),\n    LAST_UPDATE_DATE={?timestamp.sys.date?},\n    LAST_UPDATED_BY={?XIP.userId?}\nWHERE LD_ACC_ID = {?LD_ACC_ID?}"},"children":[],"expanded":false,"type":"sqlswitcher"},{"configs":{"sql":"{#ld_accountsEdit#}","transaction":"start","itemId":"ld_accounts_edit","arrayName":"batLdArray"},"children":[],"expanded":true,"type":"query"},{"configs":{"oracle":"DELETE\nFROM\n\txc_gl_ld_acc_ass_seg\nWHERE\n\tLD_ACC_ID = decode({?selectRows?},'0','',decode({?UPDATE_ASS?},'0',{?LD_ACC_ID?},''))","itemId":"ld_acc_assDeleteAll","mysql":"DELETE\nFROM\n\txc_gl_ld_acc_ass_seg\nWHERE\n\tLD_ACC_ID = if({?selectRows?}<>'0','',if({?UPDATE_ASS?}<>'0',{?LD_ACC_ID?},''))"},"children":[],"expanded":false,"type":"sqlswitcher"},{"configs":{"sql":"{#ld_acc_assDeleteAll#}","arrayName":"batLdArray","itemId":"ld_acc_ass_deleteAll"},"children":[],"expanded":false,"type":"query"},{"configs":{"oracle":"DELETE\nFROM\n\txc_gl_ld_acc_ass_seg\nWHERE\n\tLD_ACC_ID = {?LD_ACC_ID?}\nAND LD_SEG_ID = decode({?selectRows?},'0',{?LD_SEG_ID?},LD_SEG_ID)","itemId":"ld_acc_assDelete","mysql":"DELETE\nFROM\n\txc_gl_ld_acc_ass_seg\nWHERE\n\tLD_ACC_ID = {?LD_ACC_ID?}\nAND LD_SEG_ID = if({?selectRows?}<>'0',{?LD_SEG_ID?},LD_SEG_ID)"},"children":[],"expanded":false,"type":"sqlswitcher"},{"configs":{"sql":"{#ld_acc_assDelete#}","arrayName":"batSegArray","itemId":"ld_acc_ass_delete"},"children":[],"expanded":false,"type":"query"},{"configs":{"sql":"INSERT INTO xc_gl_ld_acc_ass_seg (\n\tLD_ACC_ID,\n\tLD_SEG_ID,\n\tIS_ENABLED,\n    CREATION_DATE,\n    CREATED_BY\n)\nVALUES\n(\n    {?LD_ACC_ID?},\n    {?LD_SEG_ID?},\n    {?IS_ENABLED?},\n    {?timestamp.sys.date?},\n    {?XIP.userId?}\n)","arrayName":"batSegArray","itemId":"ld_acc_assInsert"},"children":[],"expanded":false,"type":"query"},{"configs":{"sql":"DELETE\nFROM\n\txc_gl_ld_acc_ass_seg\nWHERE IS_ENABLED = 0","itemId":"ld_acc_assDeleteIS_ENABLEDIs0"},"children":[],"expanded":false,"type":"query"}],"expanded":true,"type":"module"}],"pageLink":"","iconCls":""}