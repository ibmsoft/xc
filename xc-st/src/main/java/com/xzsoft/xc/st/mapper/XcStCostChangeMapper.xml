<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xzsoft.xc.st.mapper.XcStCostChangeMapper">
	<!-- 库存成本调整单主表列 -->
	<sql id="xcStCostChangeHColumn">
		COST_CHANGE_H_ID,
		COST_CHANGE_H_CODE,
		COST_CHANGE_H_NAME,
		BUSINESS_TYPE_ID,
		DOC_CAT_CODE,
		ADJUST_REASON_ID,
		PERSON_ID,
		WAREHOUSE_ID,
		STATUS,
		LEDGER_ID,
		ORG_ID,
		CREATION_DATE,
		CREATED_BY,
		LAST_UPDATE_DATE,
		LAST_UPDATED_BY,
		BIZ_DATE
	</sql>
	<!-- 库存成本调整单明细列 -->
	<sql id="xcStCostChangeLColumn">
		COST_CHANGE_L_ID,
		COST_CHANGE_H_ID,
		MATERIAL_ID,
		ORDER_H_ID,
		ORDER_L_ID,
		ENTRY_H_ID,
		ENTRY_L_ID,
		QTY,
		PRICE,
		AMOUNT,
		NEWEST_PRICE,
		CHANGE_LOT,
		NEWEST_AMOUNT,
		LEDGER_ID,
		ORG_ID,
		CREATION_DATE,
		CREATED_BY,
		LAST_UPDATE_DATE,
		LAST_UPDATED_BY
	</sql>
	<!-- 根据库存成本调整单主键ID得到相应数据信息 -->
	<select id="selectXcStCostChangeH" parameterType="java.lang.String" resultType="com.xzsoft.xc.st.modal.BaseDto">
		SELECT
			<include refid="xcStCostChangeHColumn"/>
		FROM xc_st_cost_change_h
		WHERE COST_CHANGE_H_ID = #{COST_CHANGE_H_ID,jdbcType=VARCHAR}
	</select>
	<!-- 根据库存成本调整单行ID得到相应数据信息 -->
	<select id="selectXcStCostChangeL" parameterType="java.lang.String" resultType="com.xzsoft.xc.st.modal.BaseDto">
		SELECT
			<include refid="xcStCostChangeLColumn"/>
		FROM xc_st_cost_change_l
		WHERE COST_CHANGE_L_ID = #{COST_CHANGE_L_ID,jdbcType=VARCHAR}
	</select>
	<!-- 根据库存成本调整单主ID得到行相应数据信息 -->
	<select id="selectXcStCostChangeLByHId" parameterType="java.lang.String" resultType="com.xzsoft.xc.st.modal.BaseDto">
		SELECT
			<include refid="xcStCostChangeLColumn"/>
		FROM xc_st_cost_change_l
		WHERE COST_CHANGE_H_ID = #{COST_CHANGE_H_ID,jdbcType=VARCHAR}
	</select>
    <!-- 插入库存成本调整单主表 -->
    <insert id="insertXcStCostChangeH" parameterType="java.util.Map">
    	INSERT INTO xc_st_cost_change_h (
			<include refid="xcStCostChangeHColumn"/>
    	)
		VALUES (
		   #{COST_CHANGE_H_ID,jdbcType=VARCHAR},
		   #{COST_CHANGE_H_CODE,jdbcType=VARCHAR},
		   #{COST_CHANGE_H_NAME,jdbcType=VARCHAR},
		   #{BUSINESS_TYPE_ID,jdbcType=VARCHAR},
		   #{DOC_CAT_CODE,jdbcType=VARCHAR},
		   #{ADJUST_REASON_ID,jdbcType=VARCHAR},
		   #{PERSON_ID,jdbcType=VARCHAR},
		   #{WAREHOUSE_ID,jdbcType=VARCHAR},
		   #{STATUS,jdbcType=VARCHAR},
		   #{LEDGER_ID,jdbcType=VARCHAR},
		   #{ORG_ID,jdbcType=VARCHAR},
		   #{CREATION_DATE,jdbcType=TIMESTAMP},
		   #{CREATED_BY,jdbcType=VARCHAR},
		   #{LAST_UPDATE_DATE,jdbcType=TIMESTAMP},
		   #{LAST_UPDATED_BY,jdbcType=VARCHAR},
		   #{BIZ_DATE,jdbcType=TIMESTAMP}
		)
    </insert>
    <!-- 更新库存成本调整单主表 -->
    <update id="updateXcStCostChangeH" parameterType="java.util.Map">
    	UPDATE xc_st_cost_change_h SET
			COST_CHANGE_H_NAME	= #{COST_CHANGE_H_NAME,jdbcType=VARCHAR},
			BUSINESS_TYPE_ID	= #{BUSINESS_TYPE_ID,jdbcType=VARCHAR},
			DOC_CAT_CODE		= #{DOC_CAT_CODE,jdbcType=VARCHAR},
			ADJUST_REASON_ID	= #{ADJUST_REASON_ID,jdbcType=VARCHAR},
			PERSON_ID			= #{PERSON_ID,jdbcType=VARCHAR},
			WAREHOUSE_ID		= #{WAREHOUSE_ID,jdbcType=VARCHAR},
			STATUS				= #{STATUS,jdbcType=VARCHAR},
			LAST_UPDATE_DATE	= #{LAST_UPDATE_DATE,jdbcType=TIMESTAMP},
			LAST_UPDATED_BY		= #{LAST_UPDATED_BY,jdbcType=VARCHAR},
			BIZ_DATE			= #{BIZ_DATE,jdbcType=TIMESTAMP}
		WHERE
			COST_CHANGE_H_ID 	= #{COST_CHANGE_H_ID,jdbcType=VARCHAR}
    </update>
	
	<!-- 保存库存成本调整单明细 -->
	<insert id="insertXcStCostChangeL" parameterType="java.util.Map">
		<choose>
			<when test="dbType == 'mysql'">
				<foreach collection="list" item="item" index="index" open="" close="" separator=";">
					INSERT INTO xc_st_cost_change_l (
						<include refid="xcStCostChangeLColumn"/>
					)
					VALUES (
						#{item.COST_CHANGE_L_ID,jdbcType=VARCHAR},
						#{item.COST_CHANGE_H_ID,jdbcType=VARCHAR},
						#{item.MATERIAL_ID,jdbcType=VARCHAR},
						#{item.ORDER_H_ID,jdbcType=VARCHAR},
						#{item.ORDER_L_ID,jdbcType=VARCHAR},
						#{item.ENTRY_H_ID,jdbcType=VARCHAR},
						#{item.ENTRY_L_ID,jdbcType=VARCHAR},
						#{item.QTY,jdbcType=NUMERIC},
						#{item.PRICE,jdbcType=NUMERIC},
						#{item.AMOUNT,jdbcType=NUMERIC},
						#{item.NEWEST_PRICE,jdbcType=NUMERIC},
						#{item.CHANGE_LOT,jdbcType=NUMERIC},
						#{item.NEWEST_AMOUNT,jdbcType=NUMERIC},
						#{item.LEDGER_ID,jdbcType=VARCHAR},
						#{item.ORG_ID,jdbcType=VARCHAR},
						#{item.CREATION_DATE,jdbcType=TIMESTAMP},
						#{item.CREATED_BY,jdbcType=VARCHAR},
						#{item.LAST_UPDATE_DATE,jdbcType=TIMESTAMP},
						#{item.LAST_UPDATED_BY,jdbcType=VARCHAR}
					)
				</foreach>
			</when>
			<when test="dbType == 'oracle'">
				<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";">
					INSERT INTO xc_st_cost_change_l (
						<include refid="xcStCostChangeLColumn"/>
					)
					VALUES (
						#{item.COST_CHANGE_L_ID,jdbcType=VARCHAR},
						#{item.COST_CHANGE_H_ID,jdbcType=VARCHAR},
						#{item.MATERIAL_ID,jdbcType=VARCHAR},
						#{item.ORDER_H_ID,jdbcType=VARCHAR},
						#{item.ORDER_L_ID,jdbcType=VARCHAR},
						#{item.ENTRY_H_ID,jdbcType=VARCHAR},
						#{item.ENTRY_L_ID,jdbcType=VARCHAR},
						#{item.QTY,jdbcType=NUMERIC},
						#{item.PRICE,jdbcType=NUMERIC},
						#{item.AMOUNT,jdbcType=NUMERIC},
						#{item.NEWEST_PRICE,jdbcType=NUMERIC},
						#{item.CHANGE_LOT,jdbcType=NUMERIC},
						#{item.NEWEST_AMOUNT,jdbcType=NUMERIC},
						#{item.LEDGER_ID,jdbcType=VARCHAR},
						#{item.ORG_ID,jdbcType=VARCHAR},
						#{item.CREATION_DATE,jdbcType=TIMESTAMP},
						#{item.CREATED_BY,jdbcType=VARCHAR},
						#{item.LAST_UPDATE_DATE,jdbcType=TIMESTAMP},
						#{item.LAST_UPDATED_BY,jdbcType=VARCHAR}
					)
				</foreach>
			</when>
		</choose>
	</insert>

	<!-- 更新库存成本调整单明细  -->
	<update id="updateXcStCostChangeL" parameterType="java.util.Map">
		<choose>
			<when test="dbType == 'mysql'">
				<foreach collection="list" item="item" index="index" open="" close="" separator=";">
					UPDATE xc_st_cost_change_l SET
						MATERIAL_ID			= #{item.MATERIAL_ID,jdbcType=VARCHAR},
						ORDER_H_ID			= #{item.ORDER_H_ID,jdbcType=VARCHAR},
						ORDER_L_ID			= #{item.ORDER_L_ID,jdbcType=VARCHAR},
						ENTRY_H_ID			= #{item.ENTRY_H_ID,jdbcType=VARCHAR},
						ENTRY_L_ID			= #{item.ENTRY_L_ID,jdbcType=VARCHAR},
						QTY					= #{item.QTY,jdbcType=NUMERIC},
						PRICE				= #{item.PRICE,jdbcType=NUMERIC},
						AMOUNT				= #{item.AMOUNT,jdbcType=NUMERIC},
						NEWEST_PRICE		= #{item.NEWEST_PRICE,jdbcType=NUMERIC},
						CHANGE_LOT			= #{item.CHANGE_LOT,jdbcType=NUMERIC},
						NEWEST_AMOUNT		= #{item.NEWEST_AMOUNT,jdbcType=NUMERIC},
						LAST_UPDATE_DATE	= #{item.LAST_UPDATE_DATE,jdbcType=TIMESTAMP},
						LAST_UPDATED_BY		= #{item.LAST_UPDATED_BY,jdbcType=VARCHAR}
					WHERE
						COST_CHANGE_L_ID	= #{item.COST_CHANGE_L_ID,jdbcType=VARCHAR}
				</foreach>
			</when>
			<when test="dbType == 'oracle'">
				<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";">
					UPDATE xc_st_cost_change_l SET
						MATERIAL_ID			= #{item.MATERIAL_ID,jdbcType=VARCHAR},
						ORDER_H_ID			= #{item.ORDER_H_ID,jdbcType=VARCHAR},
						ORDER_L_ID			= #{item.ORDER_L_ID,jdbcType=VARCHAR},
						ENTRY_H_ID			= #{item.ENTRY_H_ID,jdbcType=VARCHAR},
						ENTRY_L_ID			= #{item.ENTRY_L_ID,jdbcType=VARCHAR},
						QTY					= #{item.QTY,jdbcType=NUMERIC},
						PRICE				= #{item.PRICE,jdbcType=NUMERIC},
						AMOUNT				= #{item.AMOUNT,jdbcType=NUMERIC},
						NEWEST_PRICE		= #{item.NEWEST_PRICE,jdbcType=NUMERIC},
						CHANGE_LOT			= #{item.CHANGE_LOT,jdbcType=NUMERIC},
						NEWEST_AMOUNT		= #{item.NEWEST_AMOUNT,jdbcType=NUMERIC},
						LAST_UPDATE_DATE	= #{item.LAST_UPDATE_DATE,jdbcType=TIMESTAMP},
						LAST_UPDATED_BY		= #{item.LAST_UPDATED_BY,jdbcType=VARCHAR}
					WHERE
						COST_CHANGE_L_ID	= #{item.COST_CHANGE_L_ID,jdbcType=VARCHAR}
				</foreach>
			</when>			
		</choose>
	</update>
	
	<!-- 批量删除库存成本调整单主表  -->
	<delete id="deleteXcStCostChangeH" parameterType="java.util.List">
		DELETE FROM xc_st_cost_change_h WHERE COST_CHANGE_H_ID IN 
		<foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete>
	
	<!-- 根据库存成本调整单主表ID批量删除库存成本调整单行表信息 -->
	<delete id="deleteXcStCostChangeLByHId" parameterType="java.util.List">
		DELETE FROM xc_st_cost_change_l WHERE COST_CHANGE_H_ID IN 
		<foreach collection="list" index="index" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete>
	
	<!-- 根据库存成本调整单行表ID批量删除库存成本调整单行表信息 -->
	<delete id="deleteXcStCostChangeLByLId" parameterType="java.util.Map">
		<choose>
			<when test="dbType == 'mysql'">
				<foreach collection="list" item="item" index="index" open="" close="" separator=";">
					DELETE FROM xc_st_cost_change_l WHERE COST_CHANGE_L_ID = #{item.COST_CHANGE_L_ID}
				</foreach>
			</when>
			<when test="dbType == 'oracle'">
				<foreach collection="list" item="item" index="index" open="begin" close="end;" separator=";">
					DELETE FROM xc_st_cost_change_l WHERE COST_CHANGE_L_ID = #{item.COST_CHANGE_L_ID}
				</foreach>
			</when>			
		</choose>
	</delete>
</mapper>